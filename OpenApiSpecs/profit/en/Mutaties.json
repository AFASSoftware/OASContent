{
  "openapi": "3.0.0",
  "info": {
    "version": "6.6.9",
    "title": "AFAS Mutaties API",
    "description": "This API describes the endpoints related to Mutaties. Use this API with the functional description of the API."
  },
  "servers": [
    {
      "url": "https://{id}.rest.afas.online/ProfitRestServices",
      "description": "Production environment",
      "variables": {
        "id": {
          "description": "5 digit environment number",
          "default": "12345"
        }
      }
    },
    {
      "url": "https://{id}.resttest.afas.online/ProfitRestServices",
      "description": "Test environment",
      "variables": {
        "id": {
          "description": "5 digit environment number",
          "default": "12345"
        }
      }
    },
    {
      "url": "https://{id}.restaccept.afas.online/ProfitRestServices",
      "description": "Accept environment",
      "variables": {
        "id": {
          "description": "5 digit environment number",
          "default": "12345"
        }
      }
    },
    {
      "url": "https://{id}.restcursus.afas.online/ProfitRestServices",
      "description": "Cursus environment",
      "variables": {
        "id": {
          "description": "5 digit environment number",
          "default": "12345"
        }
      }
    }
  ],
  "paths": {
    "/connectors/FbConfrontation": {
      "post": {
        "summary": "Confrontatie",
        "description": "\n\rAlleen beschikbaar onder conditie: Confrontatie (Activering)\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_FbConfrontation.htm",
        "operationId": "POST_FbConfrontation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FbConfrontation_POST"
              },
              "examples": {
                "meerdere ontvangsten": {
                  "value": {
                    "FbConfrontation": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "InId": "INK00205",
                          "CfBc": "1"
                        },
                        "Objects": {
                          "FbGoodsReceived": {
                            "Element": [
                              {
                                "Fields": {
                                  "OrNu": "00006"
                                },
                                "Objects": {
                                  "FbGoodsReceivedLines": {
                                    "Element": [
                                      {
                                        "Fields": {
                                          "GuLi": "{652CD424-23B1-423C-B0BC-283F573B7F96}"
                                        }
                                      },
                                      {
                                        "Fields": {
                                          "GuLi": "{3213BA5C-F5F1-4924-AA1D-DE952108F7B3}",
                                          "QuCU": "1",
                                          "QuCf": "1",
                                          "Uinv": "1",
                                          "PRCf": "1",
                                          "FuCo": "true"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "OrNu": "00042"
                                },
                                "Objects": {
                                  "FbGoodsReceivedLines": {
                                    "Element": [
                                      {
                                        "Fields": {
                                          "GuLi": "{46A9DB83-B1BD-4A9E-89DB-E8BBBE6D4D85}",
                                          "QuCU": "1",
                                          "QuCf": "1",
                                          "Uinv": "1",
                                          "PRCf": "9",
                                          "FuCo": "true"
                                        }
                                      },
                                      {
                                        "Fields": {
                                          "GuLi": "{0DB15922-A24C-4C07-9CB0-74A14CD99BE9}"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "minimaal afwijkende aantallen": {
                  "value": {
                    "FbConfrontation": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "InId": "INK00204",
                          "CfBc": "1"
                        },
                        "Objects": {
                          "FbGoodsReceived": {
                            "Element": {
                              "Fields": {
                                "OrNu": "00021"
                              },
                              "Objects": {
                                "FbGoodsReceivedLines": {
                                  "Element": {
                                    "Fields": {
                                      "GuLi": "{42934570-075E-455B-B69F-D87CA2CA722D}",
                                      "QuCU": "1",
                                      "QuCf": "1",
                                      "Uinv": "10",
                                      "PRCf": "0",
                                      "FuCo": "false"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "minimaal afwijkende aantallen 2": {
                  "value": {
                    "FbConfrontation": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "InId": "INK00204",
                          "CfBc": "1"
                        },
                        "Objects": {
                          "FbGoodsReceived": {
                            "Element": {
                              "Fields": {
                                "OrNu": "00021"
                              },
                              "Objects": {
                                "FbGoodsReceivedLines": {
                                  "Element": {
                                    "Fields": {
                                      "GuLi": "{EB1B9435-56BC-4998-9183-B1F61BFFA47F}",
                                      "QuCU": "2",
                                      "QuCf": "2",
                                      "Uinv": "10",
                                      "PRCf": "0",
                                      "FuCo": "true"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "minimaal guid": {
                  "value": {
                    "FbConfrontation": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "InId": "INK00206",
                          "CfBc": "1"
                        },
                        "Objects": {
                          "FbGoodsReceived": {
                            "Element": {
                              "Fields": {
                                "OrNu": "00064"
                              },
                              "Objects": {
                                "FbGoodsReceivedLines": {
                                  "Element": {
                                    "Fields": {
                                      "GuLi": "{578F25F9-6E7D-4900-9663-189A699D4B03}"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Confrontatie"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FbConfrontation/FbConfrontation/@UnId/{UnId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "UnId",
          "in": "path",
          "required": true,
          "description": "Administration"
        }
      ],
      "delete": {
        "summary": "Confrontatie",
        "operationId": "DELETE_FbConfrontation",
        "description": "\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_FbConfrontation.htm",
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "200": {
            "$ref": "#/components/responses/200"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Confrontatie"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ]
      }
    },
    "/connectors/FbInstalment": {
      "post": {
        "summary": "Factuurtermijn",
        "description": "\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_Pro_Instlm.htm",
        "operationId": "POST_FbInstalment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FbInstalment_POST"
              },
              "examples": {
                "insert": {
                  "value": {
                    "FbInstalment": {
                      "Element": {
                        "Fields": {
                          "PrId": "910004"
                        },
                        "Objects": {
                          "FbInstalmentLines": {
                            "Element": {
                              "Fields": {
                                "SaFc": "6000",
                                "ItCd": "T1",
                                "VaRc": "1",
                                "Pr": "0"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "results": {
                        "FbInstalment": {
                          "Inst": "PrimaryKeyValue",
                          "PrId": "PrimaryKeyValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "no-store, no-cache",
                "schema": {
                  "type": "string"
                }
              },
              "Transfer-Encoding": {
                "description": "chunked",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "application/json; charset=utf-8",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Encoding": {
                "description": "gzip",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "max-age=31536000",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Version": {
                "description": "4.3.0.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "nosniff",
                "schema": {
                  "type": "string"
                }
              },
              "X-Frame-Options": {
                "description": "deny",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Stats": {
                "description": "init(0ms), before response(10ms), after response(609ms), after compressing(610ms), complete(610ms)",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "*",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "GET, POST, PUT, DELETE, OPTIONS",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "description": "1728000",
                "schema": {
                  "type": "string"
                }
              },
              "Date": {
                "description": "Wed, 07 Feb 2024 10:39:26 GMT",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Factuurtermijn"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      },
      "put": {
        "summary": "Factuurtermijn",
        "description": "\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_Pro_Instlm.htm",
        "operationId": "PUT_FbInstalment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FbInstalment_PUT"
              },
              "examples": {
                "meerdere": {
                  "value": {
                    "FbInstalment": {
                      "Element": {
                        "Fields": {
                          "PrId": "300001"
                        },
                        "Objects": {
                          "FbInstalmentLines": {
                            "Element": [
                              {
                                "Fields": {
                                  "Inst": "4",
                                  "SaFc": "6000",
                                  "VaRc": "1",
                                  "Pr": "1"
                                }
                              },
                              {
                                "Fields": {
                                  "Inst": "5",
                                  "SaFc": "6000",
                                  "VaRc": "1",
                                  "Pr": "1"
                                }
                              },
                              {
                                "Fields": {
                                  "Inst": "6",
                                  "SaFc": "6000",
                                  "VaRc": "1",
                                  "Pr": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "update": {
                  "value": {
                    "FbInstalment": {
                      "Element": {
                        "Fields": {
                          "PrId": "300034"
                        },
                        "Objects": {
                          "FbInstalmentLines": {
                            "Element": {
                              "Fields": {
                                "Inst": "1",
                                "SaFc": "6000",
                                "VaRc": "1",
                                "Pr": "0",
                                "Ds": "UPDATE"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "results": {
                        "FbInstalment": {
                          "Inst": "PrimaryKeyValue",
                          "PrId": "PrimaryKeyValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "no-store, no-cache",
                "schema": {
                  "type": "string"
                }
              },
              "Transfer-Encoding": {
                "description": "chunked",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "application/json; charset=utf-8",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Encoding": {
                "description": "gzip",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "max-age=31536000",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Version": {
                "description": "4.3.0.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "nosniff",
                "schema": {
                  "type": "string"
                }
              },
              "X-Frame-Options": {
                "description": "deny",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Stats": {
                "description": "init(0ms), before response(10ms), after response(609ms), after compressing(610ms), complete(610ms)",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "*",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "GET, POST, PUT, DELETE, OPTIONS",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "description": "1728000",
                "schema": {
                  "type": "string"
                }
              },
              "Date": {
                "description": "Wed, 07 Feb 2024 10:39:26 GMT",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Factuurtermijn"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FbInstalment/FbInstalmentLines": {
      "post": {
        "summary": "Factuurtermijn",
        "description": "Update main record in FbInstalment and insert subrecord into FbInstalmentLines. \n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_Pro_Instlm.htm",
        "operationId": "POSTSubRecordFbInstalmentFbInstalmentLines",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FbInstalment_POST"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "results": {
                        "FbInstalment": {
                          "Inst": "PrimaryKeyValue",
                          "PrId": "PrimaryKeyValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "no-store, no-cache",
                "schema": {
                  "type": "string"
                }
              },
              "Transfer-Encoding": {
                "description": "chunked",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "application/json; charset=utf-8",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Encoding": {
                "description": "gzip",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "max-age=31536000",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Version": {
                "description": "4.3.0.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "nosniff",
                "schema": {
                  "type": "string"
                }
              },
              "X-Frame-Options": {
                "description": "deny",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Stats": {
                "description": "init(0ms), before response(10ms), after response(609ms), after compressing(610ms), complete(610ms)",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "*",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "GET, POST, PUT, DELETE, OPTIONS",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "description": "1728000",
                "schema": {
                  "type": "string"
                }
              },
              "Date": {
                "description": "Wed, 07 Feb 2024 10:39:26 GMT",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Factuurtermijn"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FiElectronicInvoicePurchase": {
      "post": {
        "summary": "E-inkoopfactuur",
        "description": "\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_FiElectronicInvoicePurchase.htm",
        "operationId": "POST_FiElectronicInvoicePurchase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiElectronicInvoicePurchase_POST"
              },
              "examples": {
                "insert": {
                  "value": {
                    "FiElectronicInvoicePurchase": {
                      "Element": {
                        "Fields": {
                          "FXml": "example.xml",
                          "XML": "iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAIAAACzY\u002Ba1AAAEB0lEQVR4nO3YQU/yShiG4SmlBSwYjEIQCyaSqmHl//8NLNgZSaORAmJQxCC0dihzFs3hEPQkX8KXlid5rl1r9YW5w2RQ63Q6gpBl0n4BtC8mhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J42bRfwH88zxNCNBqN\u002BHK5XPZ6ve0HHMexLEsIoZQaj8fT6TSKouPjY9u2s9m93kiKo/d3KAnH4/H7\u002B/vp6enmThAEpmm22\u002B1fH57NZq1WS9f1fr//9PTkOA7i6L8i/Y00DEPXdSeTiWma2/eDIMjn8z\u002BfV0pNJpNarZbP5w3DaDabi8VisVhgjf6L0k\u002B4XC5N07y9vc3lctv3/28dfd9fr9fxtiaEMAzDNM2ddZzNZt1udz6fx5ePj48PDw9KqQRGJy/9jbRcLpfL5Z/34/W6v7\u002BXUhYKhXq9Hq\u002BdlFIIYRjG5knDMMIw3PmbJycng8Hg5uZmNpvN5/Pr62tN0xIYnbz0P4W/iqJISmmapuM47Xb76OjIdd0gCIQQ6/VaCLHdQ9O0n58w27bX67XnecPhsFarFQqFxEYn7EAT6rp\u002Bd3fXbDaz2Ww2m724uMjlcm9vb\u002BLfFdxeOKVUJrP7RnRdt2374\u002BMjl8tVq9UkRyfsQBP\u002BZJpmvI/FR4/VarX5kZRye3Pb8H1fCBGGYRRFCY9O0oEm/Pr66na739/f8aVSanPEyOfzmUxmc4iQUoZhuDlibPi\u002B//r6Wq/XdV2Pv/YlNjphB5rQsqxCoeB5XhiGq9VqMBhEUVSpVIQQmUzm7OxsNBr5vi\u002Bl7Pf7lmXtrKNS6vn5uVgsVqvVRqPx\u002Bfk5nU6TGZ289E\u002Bkv9I07erqajQa9Xq9\u002BBzvOM7m/yDn5\u002BdKKdd1hRClUuny8nLn119eXqSUrVZLCFEsFiuVynA4LJVKf7Lp7Tk6eVqn00n7NdBeDnQjpT/HhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEN4/cnznZiQb6hsAAAAASUVORK5CYII=",
                          "FPdf": "example.pdf",
                          "PDF": "iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAIAAACzY\u002Ba1AAAEB0lEQVR4nO3YQU/yShiG4SmlBSwYjEIQCyaSqmHl//8NLNgZSaORAmJQxCC0dihzFs3hEPQkX8KXlid5rl1r9YW5w2RQ63Q6gpBl0n4BtC8mhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J4TAiPCeExITwmhMeE8JgQHhPCY0J42bRfwH88zxNCNBqN\u002BHK5XPZ6ve0HHMexLEsIoZQaj8fT6TSKouPjY9u2s9m93kiKo/d3KAnH4/H7\u002B/vp6enmThAEpmm22\u002B1fH57NZq1WS9f1fr//9PTkOA7i6L8i/Y00DEPXdSeTiWma2/eDIMjn8z\u002BfV0pNJpNarZbP5w3DaDabi8VisVhgjf6L0k\u002B4XC5N07y9vc3lctv3/28dfd9fr9fxtiaEMAzDNM2ddZzNZt1udz6fx5ePj48PDw9KqQRGJy/9jbRcLpfL5Z/34/W6v7\u002BXUhYKhXq9Hq\u002BdlFIIYRjG5knDMMIw3PmbJycng8Hg5uZmNpvN5/Pr62tN0xIYnbz0P4W/iqJISmmapuM47Xb76OjIdd0gCIQQ6/VaCLHdQ9O0n58w27bX67XnecPhsFarFQqFxEYn7EAT6rp\u002Bd3fXbDaz2Ww2m724uMjlcm9vb\u002BLfFdxeOKVUJrP7RnRdt2374\u002BMjl8tVq9UkRyfsQBP\u002BZJpmvI/FR4/VarX5kZRye3Pb8H1fCBGGYRRFCY9O0oEm/Pr66na739/f8aVSanPEyOfzmUxmc4iQUoZhuDlibPi\u002B//r6Wq/XdV2Pv/YlNjphB5rQsqxCoeB5XhiGq9VqMBhEUVSpVIQQmUzm7OxsNBr5vi\u002Bl7Pf7lmXtrKNS6vn5uVgsVqvVRqPx\u002Bfk5nU6TGZ289E\u002Bkv9I07erqajQa9Xq9\u002BBzvOM7m/yDn5\u002BdKKdd1hRClUuny8nLn119eXqSUrVZLCFEsFiuVynA4LJVKf7Lp7Tk6eVqn00n7NdBeDnQjpT/HhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEB4TwmNCeEwIjwnhMSE8JoTHhPCYEN4/cnznZiQb6hsAAAAASUVORK5CYII=",
                          "Proc": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "E-inkoopfactuur"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FiEntries": {
      "post": {
        "summary": "Financi\u00EBle mutatie",
        "description": "\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_070.htm",
        "operationId": "POST_FiEntries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiEntries_POST"
              },
              "examples": {
                "CashBook CreditorPay": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "50"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1100",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0002",
                                  "AmDe": "0",
                                  "AmCr": "1806.22"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60005",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0002",
                                  "InId": "INK00188",
                                  "AmDe": "1806.22",
                                  "AmCr": "0"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "CashBook Debtor Payment": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "50"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1100",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0003",
                                  "AmDe": "2082.50",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "10044",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0003",
                                  "InId": "V0002407",
                                  "AmDe": "0",
                                  "AmCr": "2082.50"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "CashBook Post Entry": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "50"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1100",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0004",
                                  "AmDe": "1000",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "49999",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0004",
                                  "AmDe": "0",
                                  "AmCr": "1000"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "CashBook Write Off": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "50"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1100",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0001",
                                  "AmDe": "1000",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "50000",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "BANK0001",
                                  "AmDe": "0",
                                  "AmCr": "1000"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Direct Debit Entries": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2018",
                          "Peri": "11",
                          "UnId": "1",
                          "JoCo": "50"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8150",
                                  "EnDa": "2018-11-28",
                                  "BpDa": "2018-11-28",
                                  "BpNr": "1481732",
                                  "InId": null,
                                  "Ds": "/PREF/2976RCUR",
                                  "AmDe": "1323.41",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8150",
                                  "EnDa": "2018-11-28",
                                  "BpDa": "2018-11-28",
                                  "BpNr": "1481732",
                                  "InId": "1847674",
                                  "Ds": "Bankrekening: 145138690",
                                  "AmDe": "0",
                                  "AmCr": "183.64"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8150",
                                  "EnDa": "2018-11-28",
                                  "BpDa": "2018-11-28",
                                  "BpNr": "1481732",
                                  "InId": "1847752",
                                  "Ds": "Bankrekening: 145138690",
                                  "AmDe": "0",
                                  "AmCr": "1089.52"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8150",
                                  "EnDa": "2018-11-28",
                                  "BpDa": "2018-11-28",
                                  "BpNr": "1481732",
                                  "InId": "1847144",
                                  "Ds": "Bankrekening: 145138690",
                                  "AmDe": "0",
                                  "AmCr": "27.75"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8150",
                                  "EnDa": "2018-11-28",
                                  "BpDa": "2018-11-28",
                                  "BpNr": "1481732",
                                  "InId": "1847145",
                                  "Ds": "Bankrekening: 145138690",
                                  "AmDe": "0",
                                  "AmCr": "22.50"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Inventory Post Entry": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "12",
                          "UnId": "1",
                          "JoCo": "95"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "3000",
                                  "EnDa": "2013-12-31",
                                  "BpDa": "2013-12-31",
                                  "BpNr": "VOOR0002",
                                  "AmDe": "5000",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "3300",
                                  "EnDa": "2013-12-31",
                                  "BpDa": "2013-12-31",
                                  "BpNr": "VOOR0002",
                                  "AmDe": "0",
                                  "AmCr": "5000"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Inventory Transfer": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "12",
                          "UnId": "1",
                          "JoCo": "95"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "3030",
                                  "EnDa": "2013-12-31",
                                  "BpDa": "2013-12-31",
                                  "BpNr": "VOOR0003",
                                  "AmDe": "5000",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "3020",
                                  "EnDa": "2013-12-31",
                                  "BpDa": "2013-12-31",
                                  "BpNr": "VOOR0003",
                                  "AmDe": "0",
                                  "AmCr": "5000"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Inventory Write Off": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "12",
                          "UnId": "1",
                          "JoCo": "95"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "3300",
                                  "EnDa": "2013-12-31",
                                  "BpDa": "2013-12-31",
                                  "BpNr": "VOOR0001",
                                  "AmDe": "5000",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "3020",
                                  "EnDa": "2013-12-31",
                                  "BpDa": "2013-12-31",
                                  "BpNr": "VOOR0001",
                                  "AmDe": "0",
                                  "AmCr": "5000"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Journal": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": [
                          {
                            "Year": "2023",
                            "Peri": "6",
                            "UnId": "1",
                            "JoCo": "80"
                          }
                        ],
                        "Objects": [
                          {
                            "FiEntries": {
                              "Element": [
                                {
                                  "Fields": {
                                    "VaAs": "1",
                                    "AcNr": "0100",
                                    "EnDa": "2023-01-01",
                                    "BpDa": "2023-01-01",
                                    "BpNr": "MEMO0001",
                                    "AmDe": "0",
                                    "AmCr": "100"
                                  }
                                },
                                {
                                  "Fields": {
                                    "VaAs": "1",
                                    "AcNr": "0200",
                                    "EnDa": "2023-01-01",
                                    "BpDa": "2023-01-01",
                                    "BpNr": "MEMO0001",
                                    "AmDe": "100",
                                    "AmCr": "0"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Journalentry with dimentions": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2023",
                          "Peri": "6",
                          "UnId": "1",
                          "JoCo": "80"
                        },
                        "Objects": [
                          {
                            "FiEntries": {
                              "Element": [
                                {
                                  "Fields": {
                                    "VaAs": "1",
                                    "AcNr": "0100",
                                    "EnDa": "2023-01-01",
                                    "BpDa": "2023-01-01",
                                    "BpNr": "MEMO0001",
                                    "AmDe": "0",
                                    "AmCr": "100"
                                  },
                                  "Objects": [
                                    {
                                      "FiDimEntries": {
                                        "Element": {
                                          "Fields": {
                                            "DiC1": "11"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "Fields": {
                                    "VaAs": "1",
                                    "AcNr": "0200",
                                    "EnDa": "2023-01-01",
                                    "BpDa": "2023-01-01",
                                    "BpNr": "MEMO0001",
                                    "AmDe": "100",
                                    "AmCr": "0"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "PettyCash Creditor Pay": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "40"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1000",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0002",
                                  "AmDe": "0",
                                  "AmCr": "317.29"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "50013",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0002",
                                  "InId": "INK00190",
                                  "AmDe": "317.29",
                                  "AmCr": "0"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PettyCash Debtor Payment": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "40"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1000",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0003",
                                  "AmDe": "273.70",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "10208",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0003",
                                  "InId": "00001893",
                                  "AmDe": "0",
                                  "AmCr": "273.70"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PettyCash Post Entry": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "40"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1000",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0004",
                                  "AmDe": "1000",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "49999",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0004",
                                  "AmDe": "0",
                                  "AmCr": "1000"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PettyCash WriteOff": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "40"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1000",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0001",
                                  "AmDe": "1000",
                                  "AmCr": "0"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "50000",
                                  "EnDa": "2013-01-02",
                                  "BpDa": "2013-01-02",
                                  "BpNr": "KAS0001",
                                  "AmDe": "0",
                                  "AmCr": "1000"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase Block for payment": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60014",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "InId": "FACTUUR99",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "DaEx": "2013-02-01",
                                  "Judg": "ALLARDJ",
                                  "BlPa": "1"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "InId": "FACTUUR99",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "InId": "FACTUUR99",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase Credit": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60014",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase to G Account": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2014",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60021",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "InId": "G-REKENING",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "DaEx": "2014-02-01",
                                  "AmGa": "5000"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "InId": "G-REKENING",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "InId": "G-REKENING",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase transitorisch": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2020",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "82"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60014",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-12-10",
                                  "BpNr": "TR00000045",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-12-10",
                                  "BpNr": "TR00000045",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                },
                                "Objects": {
                                  "FiTransEntries": {
                                    "Element": {
                                      "Fields": {
                                        "YeSt": "2020",
                                        "PeSt": "1",
                                        "YeEn": "2020",
                                        "PeEn": "12"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-12-10",
                                  "BpNr": "TR00000045",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase with Currency": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60002",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "CuId": "NOK",
                                  "Rate": "7.5",
                                  "AmDc": "0",
                                  "AmCc": "75000",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase with Multiple VAT variants": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60014",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "3270",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "1000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "210",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "1000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "60",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4210",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "1000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase with Project Entry": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60014",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4320",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                },
                                "Objects": {
                                  "FiPrjEntries": {
                                    "Element": [
                                      {
                                        "Fields": {
                                          "PrId": "300000",
                                          "ItCd": "K01",
                                          "Ds": "Doorgeboekte mutatie",
                                          "AmCo": "5000",
                                          "Ch": "1",
                                          "AmSe": "5000",
                                          "Qu": "1"
                                        }
                                      },
                                      {
                                        "Fields": {
                                          "PrId": "300000",
                                          "ItCd": "K02",
                                          "Ds": "Doorgeboekte mutatie",
                                          "AmCo": "5000",
                                          "Ch": "1",
                                          "AmSe": "5000",
                                          "Qu": "1"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchase with VAT": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2014",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "50013",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "InId": "Connector",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "DaEx": "2014-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4510",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "InId": "Connector",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "InId": "Connector",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Purchasewith Project Entry to Employee": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "10",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "3",
                                  "AcNr": "60014",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "4320",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "5"
                                },
                                "Objects": {
                                  "FiPrjEntries": {
                                    "Element": [
                                      {
                                        "Fields": {
                                          "PrId": "300000",
                                          "ItCd": "K01",
                                          "Ds": "Doorgeboekte mutatie",
                                          "AmCo": "5000",
                                          "Ch": "1",
                                          "AmSe": "5000",
                                          "Qu": "1",
                                          "EmId": "FloorA"
                                        }
                                      },
                                      {
                                        "Fields": {
                                          "PrId": "300000",
                                          "ItCd": "K02",
                                          "Ds": "Doorgeboekte mutatie",
                                          "AmCo": "5000",
                                          "Ch": "1",
                                          "AmSe": "5000",
                                          "Qu": "1",
                                          "EmId": "FloorA"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1500",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales Credit Due Date Empty": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "12100"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "1"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales Credit": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "VaId": "1"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "2100",
                                  "AmCr": "0",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales Currency": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "20000",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "CuId": "GBP",
                                  "Rate": "0.87",
                                  "AmDc": "8700",
                                  "AmCc": "0",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "12100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales Date Mismatch VAT Low": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2018",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2019-01-01",
                                  "BpDa": "2018-12-10",
                                  "AmDe": "10000",
                                  "AmCr": "0",
                                  "DaEx": "2019-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2019-01-01",
                                  "BpDa": "2018-12-10",
                                  "AmDe": "0",
                                  "AmCr": "9400",
                                  "VaId": "2"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2019-01-01",
                                  "BpDa": "2018-12-10",
                                  "AmDe": "0",
                                  "AmCr": "600",
                                  "VaId": "2"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales Date Mismatch": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2012-12-10",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2012-12-10",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2012-12-10",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales Project Entry": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8080",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                },
                                "Objects": {
                                  "FiPrjEntries": {
                                    "Element": [
                                      {
                                        "Fields": {
                                          "PrId": "300000",
                                          "ItCd": "K01",
                                          "Ds": "Doorgeboekte mutatie",
                                          "AmCo": "5000",
                                          "Ch": "1",
                                          "AmSe": "5000",
                                          "Qu": "1"
                                        }
                                      },
                                      {
                                        "Fields": {
                                          "PrId": "300000",
                                          "ItCd": "K02",
                                          "Ds": "Doorgeboekte mutatie",
                                          "AmCo": "5000",
                                          "Ch": "1",
                                          "AmSe": "5000",
                                          "Qu": "1"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales Specialization": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2013",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "InId": "FACTUUR V999",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2013-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8000",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "InId": "FACTUUR V999",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                },
                                "Objects": {
                                  "FiDimEntries": {
                                    "Element": {
                                      "Fields": {
                                        "DiC1": "WEST",
                                        "DiC2": "ICT",
                                        "DiC3": "LOG",
                                        "DiC4": "NOORD",
                                        "DiC5": "MAAT",
                                        "AmDe": "0",
                                        "AmCr": "10000"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2013-01-01",
                                  "BpDa": "2013-01-01",
                                  "InId": "FACTUUR V999",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales transitorisch Interim Account Not Rounding": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2020",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "82",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000040",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2020-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000040",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                },
                                "Objects": {
                                  "FiTransEntries": {
                                    "Element": {
                                      "Fields": {
                                        "YeSt": "2020",
                                        "PeSt": "1",
                                        "YeEn": "2020",
                                        "PeEn": "12",
                                        "SuAc": "1901",
                                        "VaRo": "N"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000040",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales transitorisch Specialization": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2020",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "82",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000023",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2020-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8000",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000023",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                },
                                "Objects": {
                                  "FiDimEntries": {
                                    "Element": {
                                      "Fields": {
                                        "DiC1": "WEST",
                                        "DiC2": "ICT",
                                        "DiC3": "LOG",
                                        "DiC4": "NOORD",
                                        "DiC5": "MAAT",
                                        "AmDe": "0",
                                        "AmCr": "10000"
                                      }
                                    }
                                  },
                                  "FiTransEntries": {
                                    "Element": {
                                      "Fields": {
                                        "YeSt": "2020",
                                        "PeSt": "1",
                                        "YeEn": "2020",
                                        "PeEn": "12"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000023",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales transitorisch YearEnd": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2020",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "82",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2020-06-01",
                                  "BpDa": "2020-06-01",
                                  "BpNr": "TR00000022",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2020-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2020-06-01",
                                  "BpDa": "2020-06-01",
                                  "BpNr": "TR00000022",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                },
                                "Objects": {
                                  "FiTransEntries": {
                                    "Element": {
                                      "Fields": {
                                        "YeSt": "2020",
                                        "PeSt": "6",
                                        "YeEn": "2021",
                                        "PeEn": "6"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2020-06-01",
                                  "BpDa": "2020-06-01",
                                  "BpNr": "TR00000022",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales transitorisch": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2020",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "82",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "50001",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000020",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2020-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000020",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                },
                                "Objects": {
                                  "FiTransEntries": {
                                    "Element": {
                                      "Fields": {
                                        "YeSt": "2020",
                                        "PeSt": "1",
                                        "YeEn": "2020",
                                        "PeEn": "12"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2020-01-01",
                                  "BpDa": "2020-01-01",
                                  "BpNr": "TR00000020",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Sales with VAT": {
                  "value": {
                    "FiEntryPar": {
                      "Element": {
                        "Fields": {
                          "Year": "2014",
                          "Peri": "1",
                          "UnId": "1",
                          "JoCo": "20",
                          "AuNu": "1"
                        },
                        "Objects": {
                          "FiEntries": {
                            "Element": [
                              {
                                "Fields": {
                                  "VaAs": "2",
                                  "AcNr": "10004",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "AmDe": "12100",
                                  "AmCr": "0",
                                  "DaEx": "2014-02-01"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "8010",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "AmDe": "0",
                                  "AmCr": "10000",
                                  "VaId": "1"
                                }
                              },
                              {
                                "Fields": {
                                  "VaAs": "1",
                                  "AcNr": "1510",
                                  "EnDa": "2014-01-01",
                                  "BpDa": "2014-01-01",
                                  "AmDe": "0",
                                  "AmCr": "2100",
                                  "VaId": "1"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "results": {
                        "FiEntries": {
                          "EnNo": "PrimaryKeyValue",
                          "UnId": "PrimaryKeyValue",
                          "InID": "PrimaryKeyValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "no-store, no-cache",
                "schema": {
                  "type": "string"
                }
              },
              "Transfer-Encoding": {
                "description": "chunked",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "application/json; charset=utf-8",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Encoding": {
                "description": "gzip",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "max-age=31536000",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Version": {
                "description": "4.3.0.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "nosniff",
                "schema": {
                  "type": "string"
                }
              },
              "X-Frame-Options": {
                "description": "deny",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Stats": {
                "description": "init(0ms), before response(10ms), after response(609ms), after compressing(610ms), complete(610ms)",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "*",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "GET, POST, PUT, DELETE, OPTIONS",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "description": "1728000",
                "schema": {
                  "type": "string"
                }
              },
              "Date": {
                "description": "Wed, 07 Feb 2024 10:39:26 GMT",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Financi\u00EBle mutatie"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FiEntries/FiEntryPar/@Year/{Year}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "Year",
          "in": "path",
          "required": true,
          "description": "Financial year"
        }
      ],
      "delete": {
        "summary": "Financi\u00EBle mutatie",
        "operationId": "DELETE_FiEntries",
        "description": " \n\r Let op: Bij dit endpoint zijn de parameters om een item te verwijderen nog niet gedocumenteerd. De path parameters kunnen hierdoor afwijken\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_070.htm",
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "200": {
            "$ref": "#/components/responses/200"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Financi\u00EBle mutatie"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ]
      }
    },
    "/connectors/FiEntriesCustom": {
      "put": {
        "summary": "Financi\u00EBle mutatie vrije velden",
        "description": "\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_Free_Field.htm",
        "operationId": "PUT_FiEntriesCustom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiEntriesCustom_PUT"
              },
              "examples": {
                "vrij veld": {
                  "value": {
                    "FiEntriesCustom": {
                      "Element": {
                        "@UnId": "1",
                        "@EnNo": "1",
                        "@SeNo": "1",
                        "Fields": {
                          "U1B2F1C0F4928966011FE358D8DAD7554": "Tekst gewijzigd",
                          "UB3F73075494CE9C6FFD40BAB26E13A24": "12345"
                        }
                      }
                    }
                  }
                },
                "vrij veld meerdere volgnummers": {
                  "value": {
                    "FiEntriesCustom": {
                      "Element": [
                        {
                          "@UnId": "1",
                          "@EnNo": "2",
                          "@SeNo": "1",
                          "Fields": {
                            "U76779D5140F7CC8D7F1537BD5CC4FC50": "Tekst gewijzigd",
                            "UF1A77D494646B34E15581FBFA4FA57AA": "12345"
                          }
                        },
                        {
                          "@UnId": "1",
                          "@EnNo": "2",
                          "@SeNo": "2",
                          "Fields": {
                            "U76779D5140F7CC8D7F1537BD5CC4FC50": "Tekst gewijzigd",
                            "UF1A77D494646B34E15581FBFA4FA57AA": "12345"
                          }
                        },
                        {
                          "@UnId": "1",
                          "@EnNo": "2",
                          "@SeNo": "3",
                          "Fields": {
                            "U76779D5140F7CC8D7F1537BD5CC4FC50": "Tekst gewijzigd",
                            "UF1A77D494646B34E15581FBFA4FA57AA": "12345"
                          }
                        }
                      ]
                    }
                  }
                },
                "vrij veld trailing spaces": {
                  "value": {
                    "FiEntriesCustom": {
                      "Element": {
                        "@UnId": "1",
                        "@EnNo": "1",
                        "@SeNo": "1",
                        "Fields": {
                          "U1B2F1C0F4928966011FE358D8DAD7554": "Tekst gewijzigd met wit\tt\t\t",
                          "UB3F73075494CE9C6FFD40BAB26E13A24": "12345\t\t"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Financi\u00EBle mutatie vrije velden"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FiInvoice": {
      "put": {
        "summary": "Financi\u00EBle factuur",
        "description": "\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_075.htm",
        "operationId": "PUT_FiInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiInvoice_PUT"
              },
              "examples": {
                "Afwijkende machtiging": {
                  "value": {
                    "FiInvoice": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "InId": "V0002609",
                          "BlPa": "1",
                          "DuLe": "1",
                          "AuPa": "1",
                          "DdId": "6001649"
                        }
                      }
                    }
                  }
                },
                "Crediteur": {
                  "value": {
                    "FiInvoice": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "InId": "INK00207",
                          "BlPa": "1",
                          "DuLe": "1",
                          "AuPa": "1"
                        }
                      }
                    }
                  }
                },
                "Debiteur": {
                  "value": {
                    "FiInvoice": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "InId": "V0002363",
                          "BlPa": "1",
                          "DuLe": "1",
                          "AuPa": "1"
                        }
                      }
                    }
                  }
                },
                "deblokkeren": {
                  "value": {
                    "FiInvoice": {
                      "Element": {
                        "Fields": {
                          "UnId": "1",
                          "VaAd": "3",
                          "DcNr": "50022",
                          "InId": "INK00200",
                          "BlPa": "0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "Financi\u00EBle factuur"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FiSepaDirectDebit": {
      "post": {
        "summary": "SEPA-incasso",
        "description": "\n\rAlleen beschikbaar onder conditie: Systeem Financieel (Activering)\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_SEPA_Debits.htm",
        "operationId": "POST_FiSepaDirectDebit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiSepaDirectDebit_POST"
              },
              "examples": {
                "insert": {
                  "value": {
                    "FiSepaDirectDebit": {
                      "Element": {
                        "Fields": {
                          "ViSe": "7",
                          "Ds": "40409",
                          "VaDt": "S",
                          "PaId": "400409",
                          "AuDa": "2009-11-01",
                          "UnId": "1",
                          "VaDc": "RCUR",
                          "Iban": "NL97CHAS0849835607",
                          "Conv": "True",
                          "VaDs": "3"
                        }
                      }
                    }
                  }
                },
                "nieuwe afwijkende machtiging1": {
                  "value": {
                    "FiSepaDirectDebit": {
                      "Element": {
                        "Fields": {
                          "ViSe": "6",
                          "Ds": "10011",
                          "VaDt": "S",
                          "PaId": "afwijkend kermerk1",
                          "AuDa": "2015-12-01",
                          "UnId": "1",
                          "VaDc": "AUTO",
                          "Iban": "NL97CHAS0849835607",
                          "Conv": "0"
                        }
                      }
                    }
                  }
                },
                "nieuwe afwijkende machtiging2": {
                  "value": {
                    "FiSepaDirectDebit": {
                      "Element": {
                        "Fields": {
                          "ViSe": "6",
                          "Ds": "10011",
                          "VaDt": "S",
                          "PaId": "afwijkend kermerk2",
                          "AuDa": "2015-12-01",
                          "UnId": "1",
                          "VaDc": "AUTO",
                          "Iban": "NL97CHAS0849835607",
                          "Conv": "0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "results": {
                        "FiSepaDirectDebit": {
                          "Id": "256"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "no-store, no-cache",
                "schema": {
                  "type": "string"
                }
              },
              "Transfer-Encoding": {
                "description": "chunked",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "application/json; charset=utf-8",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Encoding": {
                "description": "gzip",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "max-age=31536000",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Version": {
                "description": "4.3.0.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "nosniff",
                "schema": {
                  "type": "string"
                }
              },
              "X-Frame-Options": {
                "description": "deny",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Stats": {
                "description": "init(0ms), before response(10ms), after response(609ms), after compressing(610ms), complete(610ms)",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "*",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "GET, POST, PUT, DELETE, OPTIONS",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "description": "1728000",
                "schema": {
                  "type": "string"
                }
              },
              "Date": {
                "description": "Wed, 07 Feb 2024 10:39:26 GMT",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "SEPA-incasso"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      },
      "put": {
        "summary": "SEPA-incasso",
        "description": "\n\rAlleen beschikbaar onder conditie: Systeem Financieel (Activering)\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_SEPA_Debits.htm",
        "operationId": "PUT_FiSepaDirectDebit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiSepaDirectDebit_PUT"
              },
              "examples": {
                "update": {
                  "value": {
                    "FiSepaDirectDebit": {
                      "Element": {
                        "Fields": {
                          "ViSe": "7",
                          "Ds": "Jansen",
                          "VaDt": "S",
                          "PaId": "400409",
                          "AuDa": "2009-11-01",
                          "UnId": "1",
                          "VaDc": "RCUR",
                          "Iban": "NL97CHAS0849835607",
                          "Conv": "True",
                          "VaDs": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "results": {
                        "FiSepaDirectDebit": {
                          "Id": "256"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "no-store, no-cache",
                "schema": {
                  "type": "string"
                }
              },
              "Transfer-Encoding": {
                "description": "chunked",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "application/json; charset=utf-8",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Encoding": {
                "description": "gzip",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "max-age=31536000",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Version": {
                "description": "4.3.0.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "nosniff",
                "schema": {
                  "type": "string"
                }
              },
              "X-Frame-Options": {
                "description": "deny",
                "schema": {
                  "type": "string"
                }
              },
              "X-AFAS-Proxy-Stats": {
                "description": "init(0ms), before response(10ms), after response(609ms), after compressing(610ms), complete(610ms)",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "*",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "GET, POST, PUT, DELETE, OPTIONS",
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "description": "1728000",
                "schema": {
                  "type": "string"
                }
              },
              "Date": {
                "description": "Wed, 07 Feb 2024 10:39:26 GMT",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "SEPA-incasso"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/connectors/FiSepaDirectDebit/FiSepaDirectDebit/@ViSe/{ViSe}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "ViSe",
          "in": "path",
          "required": true,
          "description": "Organisatie vergelijken op"
        }
      ],
      "delete": {
        "summary": "SEPA-incasso",
        "operationId": "DELETE_FiSepaDirectDebit",
        "description": " \n\r Let op: Bij dit endpoint zijn de parameters om een item te verwijderen nog niet gedocumenteerd. De path parameters kunnen hierdoor afwijken\n\r https://help.afas.nl/help/NL/SE/App_Conect_UpdDsc_SEPA_Debits.htm",
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "200": {
            "$ref": "#/components/responses/200"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "SEPA-incasso"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ]
      }
    },
    "/MetaInfo": {
      "get": {
        "summary": "Retrieve the meta info of the Profit environment and the available connectors",
        "tags": [
          "API Info"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updateConnectors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "getConnectors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "envid": {
                          "type": "string"
                        },
                        "appName": {
                          "type": "string"
                        },
                        "group": {
                          "type": "string"
                        },
                        "tokenExpiry": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example Result": {
                    "value": {
                      "updateConnectors": [
                        {
                          "id": "HrCreateApplicant",
                          "description": "Aanmaken sollicitatie"
                        },
                        {
                          "id": "FbSubscription",
                          "description": "Abonnement"
                        },
                        {
                          "id": "KnAddress",
                          "description": "Adres"
                        }
                      ],
                      "getConnectors": [
                        {
                          "id": "Profit_Fin_ChangedEntrydate",
                          "description": "Profit_Fin_ChangedEntrydate"
                        },
                        {
                          "id": "Profit_Functions",
                          "description": "Profit_Functions"
                        }
                      ],
                      "info": {
                        "envid": "A123456AC",
                        "appName": "OpenAPI Spec Example",
                        "group": "AuthorizationGroup 101 (12345.USER)",
                        "tokenExpiry": "0"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_MetaInfo"
      }
    },
    "/Metainfo/{Type}/{Endpoint}": {
      "get": {
        "summary": "Retieve the metainfo of a specific connector based on the endpoint id. This includes the fields and their properties.",
        "tags": [
          "API Info"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "fieldId": {
                            "type": "string"
                          },
                          "dataType": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "length": {
                            "type": "integer"
                          },
                          "controlType": {
                            "type": "integer"
                          },
                          "decimals": {
                            "type": "integer"
                          },
                          "decimalsFieldId": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example Result": {
                    "value": {
                      "name": "Profit_Administrations",
                      "description": "Administraties (Profit)",
                      "fields": [
                        {
                          "id": "AdminId",
                          "fieldId": "U002",
                          "dataType": "int",
                          "label": "Administratie",
                          "length": 3,
                          "controlType": 5,
                          "decimals": 0,
                          "decimalsFieldId": ""
                        },
                        {
                          "id": "AdminNm",
                          "fieldId": "U001",
                          "dataType": "string",
                          "label": "Naam administratie",
                          "length": 80,
                          "controlType": 1,
                          "decimals": 0,
                          "decimalsFieldId": ""
                        },
                        {
                          "id": "AdminCd",
                          "fieldId": "UnCo",
                          "dataType": "string",
                          "label": "Administratie",
                          "length": 10,
                          "controlType": 1,
                          "decimals": 0,
                          "decimalsFieldId": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_MetaInfoPerConnector",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "get",
                "update"
              ],
              "example": "update"
            },
            "in": "path",
            "name": "Type",
            "description": "Add the type of connector you want to get the meta info from",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "KnEmployee"
            },
            "in": "path",
            "name": "Endpoint",
            "description": "Add the endpoint id of the connector you want to get the meta info from",
            "required": true
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ]
      }
    },
    "/connectors/{Endpoint}": {
      "get": {
        "summary": "Retieve the metainfo of a custom getconnector based on the endpoint id. This includes the fields and their properties. These id\u0027s can be found in the metainfo request result.",
        "tags": [
          "GET"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "EmployeeId": {
                            "type": "string"
                          },
                          "EmploymentEndDate": {
                            "type": "string"
                          },
                          "EmailForDigitalDocuments": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example response": {
                    "value": {
                      "skip": 0,
                      "take": 100,
                      "rows": [
                        {
                          "EmployeeId": "000001005",
                          "EmploymentEndDate": "2020-11-22T00:00:00Z",
                          "EmailForDigitalDocuments": null
                        },
                        {
                          "EmployeeId": "000001006",
                          "EmploymentEndDate": "2020-11-22T00:00:00Z",
                          "EmailForDigitalDocuments": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_MetaInfoPerCustomConnector",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "your_custom_endpoint_id"
            },
            "in": "path",
            "name": "Endpoint",
            "description": "Add the id of connector you want to get the meta info from",
            "required": true
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          }
        ]
      }
    },
    "/connectors/Profit_Accounts": {
      "get": {
        "summary": "Ledger accounts (Financial)",
        "operationId": "Get_Profit_Accounts",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Account": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "Type": {
                            "type": "string",
                            "description": "Type rekeningcode"
                          },
                          "Sort": {
                            "type": "string",
                            "description": "Soort rekening code"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked"
                          },
                          "CollectAccount": {
                            "type": "boolean",
                            "description": "Summary account"
                          },
                          "CollectAccountType": {
                            "type": "string",
                            "description": "Type verzamelrekening code"
                          },
                          "Feature": {
                            "type": "string",
                            "description": "Kenmerk rekening code"
                          },
                          "CollectOn": {
                            "type": "string",
                            "description": "Collect on"
                          },
                          "VatAllowed": {
                            "type": "boolean",
                            "description": "Allow VAT"
                          },
                          "VatCode": {
                            "type": "string",
                            "description": "Preferred VAT code"
                          },
                          "Budget": {
                            "type": "string",
                            "description": "Budgetteren code"
                          },
                          "ToProject": {
                            "type": "string",
                            "description": "Doorboeken projecten code"
                          },
                          "DimAx1": {
                            "type": "string",
                            "description": "Verbijzonderingsas 1 code"
                          },
                          "DimAx2": {
                            "type": "string",
                            "description": "Verbijzonderingsas 2 code"
                          },
                          "DimAx3": {
                            "type": "string",
                            "description": "Verbijzonderingsas 3 code"
                          },
                          "DimAx4": {
                            "type": "string",
                            "description": "Verbijzonderingsas 4 code"
                          },
                          "DimAx5": {
                            "type": "string",
                            "description": "Verbijzonderingsas 5 code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Administrations": {
      "get": {
        "summary": "Administrations (Profit)",
        "operationId": "Get_Profit_Administrations",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "AdminId": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "AdminNm": {
                            "type": "string",
                            "description": "Administration name"
                          },
                          "AdminCd": {
                            "type": "string",
                            "description": "Administration"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Allocation_Assigments": {
      "get": {
        "summary": "Allocation assignment",
        "operationId": "Get_Profit_Allocation_Assigments",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Unit": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "Account": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "DimAx": {
                            "type": "string",
                            "description": "Allocation axis"
                          },
                          "AxDescription": {
                            "type": "string",
                            "description": "Description"
                          },
                          "DimCode": {
                            "type": "string",
                            "description": "Allocation code"
                          },
                          "CodeDescription": {
                            "type": "string",
                            "description": "Description"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Balance_Allocated": {
      "get": {
        "summary": "Allocation (real, budg. reserv. and obl.)",
        "operationId": "Get_Profit_Balance_Allocated",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Unit": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "Year": {
                            "type": "integer",
                            "description": "Financial year"
                          },
                          "Period": {
                            "type": "integer",
                            "description": "Period"
                          },
                          "Account": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "DimAx": {
                            "type": "string",
                            "description": "Allocation axis"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "DimCode": {
                            "type": "string",
                            "description": "Allocation code"
                          },
                          "Credit": {
                            "type": "number",
                            "description": "Credit"
                          },
                          "Debet": {
                            "type": "number",
                            "description": "Debit"
                          },
                          "Balance": {
                            "type": "number",
                            "description": "Balance"
                          },
                          "Budget": {
                            "type": "number",
                            "description": "Bedrag budget"
                          },
                          "Reserved": {
                            "type": "number",
                            "description": "Saldo reservering basisvaluta"
                          },
                          "Obligation": {
                            "type": "number",
                            "description": "Saldo verplichting basisvaluta"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_CostCarrier": {
      "get": {
        "summary": "Employer / cost carriers",
        "operationId": "Get_Profit_CostCarrier",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "EmployerId": {
                            "type": "string",
                            "description": "Employer"
                          },
                          "CostCarrier": {
                            "type": "string",
                            "description": "Cost unit"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked"
                          },
                          "ModifiedDate": {
                            "type": "string",
                            "description": "Changed on"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_CostCentre": {
      "get": {
        "summary": "Employer / cost centres",
        "operationId": "Get_Profit_CostCentre",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "EmployerId": {
                            "type": "string",
                            "description": "Employer"
                          },
                          "CostCentre": {
                            "type": "string",
                            "description": "Cost centre"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked"
                          },
                          "ModifiedDate": {
                            "type": "string",
                            "description": "Changed on"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Creditor": {
      "get": {
        "summary": "Creditors",
        "operationId": "Get_Profit_Creditor",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CreditorId": {
                            "type": "string",
                            "description": "Creditor number"
                          },
                          "CreditorName": {
                            "type": "string",
                            "description": "Creditor name"
                          },
                          "BcCo": {
                            "type": "string",
                            "description": "Org nr."
                          },
                          "SearchName": {
                            "type": "string",
                            "description": "Search name"
                          },
                          "Adressline1": {
                            "type": "string",
                            "description": "Address line 1 (street - house number)"
                          },
                          "Adressline3": {
                            "type": "string",
                            "description": "Address line 3 (postcode - city)"
                          },
                          "Adressline4": {
                            "type": "string",
                            "description": "Address line 4 (country)"
                          },
                          "TelNr": {
                            "type": "string",
                            "description": "Work phone no."
                          },
                          "Email": {
                            "type": "string",
                            "description": "Work e-mail"
                          },
                          "IBAN": {
                            "type": "string",
                            "description": "IBAN number"
                          },
                          "Btw-nummer": {
                            "type": "string",
                            "description": "VAT identification number"
                          },
                          "ChOfCommNr": {
                            "type": "string",
                            "description": "COC number"
                          },
                          "PaymentCondition": {
                            "type": "string",
                            "description": "Betalingsvoorwaarde"
                          },
                          "CreditLimit": {
                            "type": "number",
                            "description": "Credit limit"
                          },
                          "TempBlocked": {
                            "type": "boolean",
                            "description": "Block temporarily"
                          },
                          "VatDuty": {
                            "type": "string",
                            "description": "VAT duty"
                          },
                          "AutoPayment": {
                            "type": "boolean",
                            "description": "Automatic payment"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Block completely, no longer visible"
                          },
                          "CreateDate": {
                            "type": "string",
                            "description": "Created on"
                          },
                          "ModifiedDate": {
                            "type": "string",
                            "description": "Changed on"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Creditor_Invoices": {
      "get": {
        "summary": "Outstanding items creditor",
        "operationId": "Get_Profit_Creditor_Invoices",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "UnitId": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "CreditorId": {
                            "type": "string",
                            "description": "Crediteurnr"
                          },
                          "InvoiceNr": {
                            "type": "string",
                            "description": "Invoice number"
                          },
                          "BookPiecrNr": {
                            "type": "string",
                            "description": "Entry number"
                          },
                          "BookPieceDate": {
                            "type": "string",
                            "description": "Factuurdatum"
                          },
                          "CurrencyId": {
                            "type": "string",
                            "description": "Currency"
                          },
                          "AmtInvoice": {
                            "type": "number",
                            "description": "Total invoice amount"
                          },
                          "AmtInvoiceCurr": {
                            "type": "number",
                            "description": "Total invoice amount foreign currency"
                          },
                          "ExpDate": {
                            "type": "string",
                            "description": "Expiry date"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Invoice description"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked for payment/collection"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Currency": {
      "get": {
        "summary": "Currency",
        "operationId": "Get_Profit_Currency",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CurrencyId": {
                            "type": "string",
                            "description": "Currency"
                          },
                          "Currency": {
                            "type": "string",
                            "description": "Currency description"
                          },
                          "Exchange_Rate": {
                            "type": "number",
                            "description": "Exchange rate"
                          },
                          "StartDate": {
                            "type": "string",
                            "description": "Start date"
                          },
                          "DailyRate": {
                            "type": "number",
                            "description": "Current rate"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Debtor": {
      "get": {
        "summary": "Debtors",
        "operationId": "Get_Profit_Debtor",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "DebtorId": {
                            "type": "string",
                            "description": "Debtor number"
                          },
                          "DebtorName": {
                            "type": "string",
                            "description": "Debtor name"
                          },
                          "BcCo": {
                            "type": "string",
                            "description": "Nummer org./pers."
                          },
                          "SearchName": {
                            "type": "string",
                            "description": "Search name"
                          },
                          "AdressLine1": {
                            "type": "string",
                            "description": "Address line 1 (street - house number)"
                          },
                          "AdressLine3": {
                            "type": "string",
                            "description": "Address line 3 (postcode - city)"
                          },
                          "AdressLine4": {
                            "type": "string",
                            "description": "Address line 4 (country)"
                          },
                          "TelNr": {
                            "type": "string",
                            "description": "Work phone no."
                          },
                          "Email": {
                            "type": "string",
                            "description": "Work e-mail"
                          },
                          "IBAN": {
                            "type": "string",
                            "description": "IBAN number"
                          },
                          "VatNr": {
                            "type": "string",
                            "description": "VAT identification number"
                          },
                          "ChOfCommNr": {
                            "type": "string",
                            "description": "COC number"
                          },
                          "CollectAccount": {
                            "type": "string",
                            "description": "Summary account"
                          },
                          "PayCon": {
                            "type": "string",
                            "description": "Payment condition"
                          },
                          "VatDuty": {
                            "type": "string",
                            "description": "VAT duty"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked for delivery"
                          },
                          "CreditLimit": {
                            "type": "number",
                            "description": "Credit limit"
                          },
                          "CurrencyId": {
                            "type": "string",
                            "description": "Currency"
                          },
                          "AutoPayment": {
                            "type": "boolean",
                            "description": "Automatically collect"
                          },
                          "CreateDate": {
                            "type": "string",
                            "description": "Created on"
                          },
                          "ModifiedDate": {
                            "type": "string",
                            "description": "Changed on"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Debtor_Invoices": {
      "get": {
        "summary": "Outstanding items debtor",
        "operationId": "Get_Profit_Debtor_Invoices",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "UnitId": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "DebtorId": {
                            "type": "string",
                            "description": "Debiteurennummer"
                          },
                          "InvoiceNr": {
                            "type": "string",
                            "description": "Invoice number"
                          },
                          "NookPieceDate": {
                            "type": "string",
                            "description": "Voucher date"
                          },
                          "ExpDate": {
                            "type": "string",
                            "description": "Expiry date"
                          },
                          "CurrencyId": {
                            "type": "string",
                            "description": "Currency"
                          },
                          "AmtInvoice": {
                            "type": "number",
                            "description": "Total invoice amount"
                          },
                          "AmtInvoiceCurr": {
                            "type": "number",
                            "description": "Total invoice amount foreign currency"
                          },
                          "Balance": {
                            "type": "number",
                            "description": "Balance"
                          },
                          "BalanceCurr": {
                            "type": "number",
                            "description": "Balance (currency)"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Invoice description"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Fin_ChangedEntrydate": {
      "get": {
        "summary": "Changed entry day entries",
        "operationId": "Get_Profit_Fin_ChangedEntrydate",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "EntryDate": {
                            "type": "string",
                            "description": "Entry date"
                          },
                          "Modified": {
                            "type": "string",
                            "description": "Date changed"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Journals": {
      "get": {
        "summary": "Journals",
        "operationId": "Get_Profit_Journals",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "UnitId": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "JournalId": {
                            "type": "string",
                            "description": "Journal code"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "JournalType": {
                            "type": "string",
                            "description": "Dagboeksoort code"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Period_balance": {
      "get": {
        "summary": "Ledger book (real, budg. reserv. and obl.) /pr.)",
        "operationId": "Get_Profit_Period_balance",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "UnitId": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "Year": {
                            "type": "integer",
                            "description": "Financial year"
                          },
                          "Period": {
                            "type": "integer",
                            "description": "Period"
                          },
                          "AccountNr": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "AccountDesc": {
                            "type": "string",
                            "description": "Description"
                          },
                          "Credit": {
                            "type": "number",
                            "description": "Credit"
                          },
                          "Debit": {
                            "type": "number",
                            "description": "Debit"
                          },
                          "Balance": {
                            "type": "number",
                            "description": "Balance"
                          },
                          "Budget": {
                            "type": "number",
                            "description": "Bedrag budget"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_periods_per_administration": {
      "get": {
        "summary": "Blocked periods per administration",
        "operationId": "Get_Profit_periods_per_administration",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Unit": {
                            "type": "integer",
                            "description": "Admin. without admin. filter"
                          },
                          "Year": {
                            "type": "integer",
                            "description": "Financial year"
                          },
                          "Period": {
                            "type": "integer",
                            "description": "Period"
                          },
                          "PeriodDesc": {
                            "type": "string",
                            "description": "Description"
                          },
                          "DateFrom": {
                            "type": "string",
                            "description": "Date from"
                          },
                          "DateTo": {
                            "type": "string",
                            "description": "Date up to and incl"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked"
                          },
                          "Periodtable": {
                            "type": "integer",
                            "description": "Period table"
                          },
                          "TableDesc": {
                            "type": "string",
                            "description": "Description"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_SEPA_IncassoMachtigingen": {
      "get": {
        "summary": "SEPA direct debit authorisations (Profit)",
        "operationId": "Get_Profit_SEPA_IncassoMachtigingen",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "description": "Code"
                          },
                          "debtor": {
                            "type": "string",
                            "description": "Debtor"
                          },
                          "mandateReference": {
                            "type": "string",
                            "description": "Mandate feature"
                          },
                          "IBAN": {
                            "type": "string",
                            "description": "IBAN number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Transactions": {
      "get": {
        "summary": "Financial entries",
        "operationId": "Get_Profit_Transactions",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "UnitId": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "EntryNo": {
                            "type": "integer",
                            "description": "Journal entry number"
                          },
                          "SeqNo": {
                            "type": "integer",
                            "description": "Journal entry sequence number"
                          },
                          "Year": {
                            "type": "integer",
                            "description": "Year"
                          },
                          "Period": {
                            "type": "integer",
                            "description": "Periodenummer"
                          },
                          "JournalId": {
                            "type": "string",
                            "description": "Journal code"
                          },
                          "AccountNo": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "AmtDebit": {
                            "type": "number",
                            "description": "Amount debit"
                          },
                          "AmtCredit": {
                            "type": "number",
                            "description": "Amount credit"
                          },
                          "EntryDate": {
                            "type": "string",
                            "description": "Date entry"
                          },
                          "InvoiceId": {
                            "type": "string",
                            "description": "Invoice number"
                          },
                          "VoucherDate": {
                            "type": "string",
                            "description": "Voucher date"
                          },
                          "VoucherNo": {
                            "type": "string",
                            "description": "Entry number"
                          },
                          "VatCode": {
                            "type": "string",
                            "description": "VAT code"
                          },
                          "VatAmt": {
                            "type": "number",
                            "description": "VAT amount"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description entry"
                          },
                          "Created": {
                            "type": "string",
                            "description": "Date created"
                          },
                          "Modified": {
                            "type": "string",
                            "description": "Date changed"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_Transactions_Allocated": {
      "get": {
        "summary": "Financial entries",
        "operationId": "Get_Profit_Transactions_Allocated",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "UnitId": {
                            "type": "integer",
                            "description": "Administration"
                          },
                          "EntryNo": {
                            "type": "integer",
                            "description": "Journal entry number"
                          },
                          "SeqNo": {
                            "type": "integer",
                            "description": "Journal entry sequence number"
                          },
                          "Year": {
                            "type": "integer",
                            "description": "Year"
                          },
                          "Period": {
                            "type": "integer",
                            "description": "Periodenummer"
                          },
                          "JournalId": {
                            "type": "string",
                            "description": "Journal code"
                          },
                          "AccountNo": {
                            "type": "string",
                            "description": "Account number"
                          },
                          "Omschrijving": {
                            "type": "string",
                            "description": "Description"
                          },
                          "AmtDebit": {
                            "type": "number",
                            "description": "Amount debit"
                          },
                          "AmtCredit": {
                            "type": "number",
                            "description": "Amount credit"
                          },
                          "EntryDate": {
                            "type": "string",
                            "description": "Date entry"
                          },
                          "InvoiceId": {
                            "type": "string",
                            "description": "Invoice number"
                          },
                          "VoucherDate": {
                            "type": "string",
                            "description": "Voucher date"
                          },
                          "VoucherNo": {
                            "type": "string",
                            "description": "Entry number"
                          },
                          "VatCode": {
                            "type": "string",
                            "description": "VAT code"
                          },
                          "VatAmt": {
                            "type": "number",
                            "description": "VAT amount"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description entry"
                          },
                          "Created": {
                            "type": "string",
                            "description": "Date created"
                          },
                          "Modified": {
                            "type": "string",
                            "description": "Date changed"
                          },
                          "Type": {
                            "type": "string",
                            "description": "Type rekening"
                          },
                          "Collect_On": {
                            "type": "string",
                            "description": "Type verzamelrekening"
                          },
                          "DimAx1": {
                            "type": "string",
                            "description": "Exception axis code 1"
                          },
                          "DimAx2": {
                            "type": "string",
                            "description": "Exception axis code 2"
                          },
                          "DimAx3": {
                            "type": "string",
                            "description": "Exception axis code 3"
                          },
                          "DimAx4": {
                            "type": "string",
                            "description": "Exception axis code 4"
                          },
                          "DimAx5": {
                            "type": "string",
                            "description": "Exception axis code 5"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/connectors/Profit_VAT_code": {
      "get": {
        "summary": "VAT code",
        "operationId": "Get_Profit_VAT_code",
        "description": " ",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results skipped. Starts at 0",
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "description": "Pagination: amount of results returned",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "orderbyfieldids",
            "in": "query",
            "required": false,
            "description": "Must be used to prevent reordered results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterfieldids",
            "in": "query",
            "required": false,
            "description": "The fieldIds of the values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filtervalues",
            "in": "query",
            "required": false,
            "description": "The values to filter on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatortypes",
            "in": "query",
            "required": false,
            "description": "Operator for comparing filter values. Supported values include:\n\n* \u00601\u0060 - =  (is equal to)\n* \u00602\u0060 - \u003E= (is greater or equal to)\n* \u00603\u0060 - \u003C= (is less or equal to)\n* \u00604\u0060 - \u003E  (is greater than)\n* \u00605\u0060 - \u003C  (is less than)\n* \u00606\u0060 - *  (contains text)\n* \u00607\u0060 - != (is not equal to)\n* \u00608\u0060 - [] (is empty)\n* \u00609\u0060 - ![] (is not empty)\n* \u006010\u0060 - @   (starts with)\n* \u006011\u0060 - !* (does not contain text)\n* \u006012\u0060 - !@ (does not start with)\n* \u006013\u0060 - \u0026  (ends with)\n* \u006014\u0060 - !\u0026 (does not end with)\n* \u006015\u0060 - Sf (quickfilter)\n",
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer"
                    },
                    "take": {
                      "type": "integer"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "VatCode": {
                            "type": "string",
                            "description": "VAT code"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "AccountNr": {
                            "type": "string",
                            "description": "Account"
                          },
                          "VatPerc": {
                            "type": "number",
                            "description": "Rate"
                          },
                          "VatDuty": {
                            "type": "string",
                            "description": "VAT duty"
                          },
                          "Blocked": {
                            "type": "boolean",
                            "description": "Blocked"
                          },
                          "VatMethod": {
                            "type": "string",
                            "description": "Berekeningsmethode"
                          },
                          "VatType": {
                            "type": "string",
                            "description": "Code inkoop/verkoop code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "AfasToken": []
          }
        ],
        "tags": [
          "GET"
        ]
      }
    },
    "/ProfitVersion": {
      "get": {
        "summary": "Get the current Profit version",
        "tags": [
          "API Info"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example Result": {
                    "value": {
                      "version": "22.22.5"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_ProfitVersion"
      }
    }
  },
  "tags": [
    {
      "name": "GET",
      "description": "GET"
    },
    {
      "name": "API Info",
      "description": "API Info"
    },
    {
      "name": "Confrontatie",
      "description": "Confrontatie"
    },
    {
      "name": "Factuurtermijn",
      "description": "Factuurtermijn"
    },
    {
      "name": "E-inkoopfactuur",
      "description": "E-inkoopfactuur"
    },
    {
      "name": "Financi\u00EBle mutatie",
      "description": "Financi\u00EBle mutatie"
    },
    {
      "name": "Financi\u00EBle mutatie vrije velden",
      "description": "Financi\u00EBle mutatie vrije velden"
    },
    {
      "name": "Financi\u00EBle factuur",
      "description": "Financi\u00EBle factuur"
    },
    {
      "name": "SEPA-incasso",
      "description": "SEPA-incasso"
    }
  ],
  "components": {
    "schemas": {
      "FbConfrontation_POST": {
        "type": "object",
        "properties": {
          "FbConfrontation": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "UnId": {
                        "type": "integer",
                        "description": "Administration",
                        "format": ""
                      },
                      "InId": {
                        "type": "string",
                        "maxLength": 12,
                        "description": "Invoice number",
                        "format": ""
                      },
                      "CfBc": {
                        "type": "boolean",
                        "description": "Confronteren in basisvaluta",
                        "format": ""
                      }
                    },
                    "required": [
                      "InId"
                    ]
                  },
                  "Objects": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "FbGoodsReceived": {
                          "type": "object",
                          "properties": {
                            "Element": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Fields": {
                                    "type": "object",
                                    "properties": {
                                      "OrNu": {
                                        "type": "string",
                                        "maxLength": 12,
                                        "description": "Number",
                                        "format": ""
                                      }
                                    },
                                    "required": [
                                      "OrNu"
                                    ]
                                  },
                                  "Objects": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "FbGoodsReceivedLines": {
                                          "type": "object",
                                          "properties": {
                                            "Element": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "Fields": {
                                                    "type": "object",
                                                    "properties": {
                                                      "GuLi": {
                                                        "type": "string",
                                                        "maxLength": 38,
                                                        "description": "GUID receiving line",
                                                        "format": "uuid"
                                                      },
                                                      "QuCU": {
                                                        "type": "number",
                                                        "description": "Number of units reconciled",
                                                        "format": "number"
                                                      },
                                                      "QuCf": {
                                                        "type": "number",
                                                        "description": "Quantity reconciled",
                                                        "format": "number"
                                                      },
                                                      "Uinv": {
                                                        "type": "number",
                                                        "description": "Invoice price per unit",
                                                        "format": "number"
                                                      },
                                                      "PRCf": {
                                                        "type": "number",
                                                        "description": "Reconciliation discount percentage",
                                                        "format": "number"
                                                      },
                                                      "EnNo": {
                                                        "type": "integer",
                                                        "description": "Bijbehorende journaalpostnummer",
                                                        "format": ""
                                                      },
                                                      "SeNo": {
                                                        "type": "integer",
                                                        "description": "Bijbehorende journaalpostregel",
                                                        "format": ""
                                                      },
                                                      "FuCo": {
                                                        "type": "boolean",
                                                        "description": "Geheel geconfronteerd",
                                                        "format": ""
                                                      }
                                                    },
                                                    "required": [
                                                      "GuLi"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FbInstalment_POST": {
        "type": "object",
        "properties": {
          "FbInstalment": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "PrId": {
                        "type": "string",
                        "maxLength": 15,
                        "description": "Project",
                        "format": ""
                      }
                    },
                    "required": [
                      "PrId"
                    ]
                  },
                  "Objects": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "FbInstalmentLines": {
                          "type": "object",
                          "properties": {
                            "Element": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Fields": {
                                    "type": "object",
                                    "properties": {
                                      "Inst": {
                                        "type": "integer",
                                        "description": "Instalment",
                                        "format": ""
                                      },
                                      "Ds": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "description": "Description",
                                        "format": ""
                                      },
                                      "DbId": {
                                        "type": "string",
                                        "maxLength": 16,
                                        "description": "Sales contact",
                                        "format": ""
                                      },
                                      "DuDa": {
                                        "type": "string",
                                        "description": "Expiry date",
                                        "format": "date"
                                      },
                                      "SaFc": {
                                        "type": "number",
                                        "description": "Instalment amount",
                                        "format": "number"
                                      },
                                      "Proc": {
                                        "type": "number",
                                        "description": "Percentage",
                                        "format": "number"
                                      },
                                      "ItCd": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "description": "Itemcode",
                                        "format": ""
                                      },
                                      "VaRc": {
                                        "type": "string",
                                        "maxLength": 4,
                                        "description": "VAT rate group",
                                        "format": ""
                                      },
                                      "Pr": {
                                        "type": "boolean",
                                        "description": "Ready",
                                        "format": ""
                                      },
                                      "TxId": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "description": "Text code",
                                        "format": ""
                                      },
                                      "TxDs": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "description": "Description text",
                                        "format": ""
                                      },
                                      "Prio": {
                                        "type": "integer",
                                        "description": "Priority text",
                                        "format": ""
                                      },
                                      "Text": {
                                        "type": "string",
                                        "description": "Text",
                                        "format": "byte"
                                      },
                                      "VaDu": {
                                        "type": "string",
                                        "maxLength": 3,
                                        "description": "Deviating VAT duty",
                                        "format": ""
                                      },
                                      "Di01": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di02": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di03": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di04": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di05": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "MoId": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "description": "Monitoring code",
                                        "format": ""
                                      },
                                      "CoTy": {
                                        "type": "string",
                                        "enum": [
                                          "MA",
                                          "A",
                                          "ME",
                                          "OA",
                                          "O"
                                        ],
                                        "maxLength": 20,
                                        "description": "Type of project costs\nMA = Materiaal;\nA = Arbeid;\nME = Materieel;\nOA = Onderaanneming;\nO = Overige kosten;",
                                        "format": ""
                                      },
                                      "MWrk": {
                                        "type": "boolean",
                                        "description": "Additional work",
                                        "format": ""
                                      },
                                      "NoCt": {
                                        "type": "boolean",
                                        "description": "Exclude group invoice",
                                        "format": ""
                                      },
                                      "RfCs": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "description": "Order number/reference",
                                        "format": ""
                                      },
                                      "PrSt": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "description": "Project phase",
                                        "format": ""
                                      }
                                    },
                                    "required": [
                                      "VaRc"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FbInstalment_PUT": {
        "type": "object",
        "properties": {
          "FbInstalment": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "PrId": {
                        "type": "string",
                        "maxLength": 15,
                        "description": "Project",
                        "format": ""
                      }
                    },
                    "required": [
                      "PrId"
                    ]
                  },
                  "Objects": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "FbInstalmentLines": {
                          "type": "object",
                          "properties": {
                            "Element": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Fields": {
                                    "type": "object",
                                    "properties": {
                                      "Inst": {
                                        "type": "integer",
                                        "description": "Instalment",
                                        "format": ""
                                      },
                                      "Ds": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "description": "Description",
                                        "format": ""
                                      },
                                      "DbId": {
                                        "type": "string",
                                        "maxLength": 16,
                                        "description": "Sales contact",
                                        "format": ""
                                      },
                                      "DuDa": {
                                        "type": "string",
                                        "description": "Expiry date",
                                        "format": "date"
                                      },
                                      "SaFc": {
                                        "type": "number",
                                        "multipleOf": 1E-10,
                                        "description": "Instalment amount",
                                        "format": "float"
                                      },
                                      "Proc": {
                                        "type": "number",
                                        "multipleOf": 0.01,
                                        "description": "Percentage",
                                        "format": "float"
                                      },
                                      "ItCd": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "description": "Itemcode",
                                        "format": ""
                                      },
                                      "VaRc": {
                                        "type": "string",
                                        "maxLength": 4,
                                        "description": "VAT rate group",
                                        "format": ""
                                      },
                                      "Pr": {
                                        "type": "boolean",
                                        "description": "Ready",
                                        "format": ""
                                      },
                                      "TxId": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "description": "Text code",
                                        "format": ""
                                      },
                                      "TxDs": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "description": "Description text",
                                        "format": ""
                                      },
                                      "Prio": {
                                        "type": "integer",
                                        "description": "Priority text",
                                        "format": ""
                                      },
                                      "Text": {
                                        "type": "string",
                                        "description": "Text",
                                        "format": "byte"
                                      },
                                      "VaDu": {
                                        "type": "string",
                                        "maxLength": 3,
                                        "description": "Deviating VAT duty",
                                        "format": ""
                                      },
                                      "Di01": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di02": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di03": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di04": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "Di05": {
                                        "type": "integer",
                                        "description": "(not used)",
                                        "format": ""
                                      },
                                      "MoId": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "description": "Monitoring code",
                                        "format": ""
                                      },
                                      "CoTy": {
                                        "type": "string",
                                        "enum": [
                                          "MA",
                                          "A",
                                          "ME",
                                          "OA",
                                          "O"
                                        ],
                                        "maxLength": 20,
                                        "description": "Type of project costs\nMA = Materiaal;\nA = Arbeid;\nME = Materieel;\nOA = Onderaanneming;\nO = Overige kosten;",
                                        "format": ""
                                      },
                                      "MWrk": {
                                        "type": "boolean",
                                        "description": "Additional work",
                                        "format": ""
                                      },
                                      "NoCt": {
                                        "type": "boolean",
                                        "description": "Exclude group invoice",
                                        "format": ""
                                      },
                                      "RfCs": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "description": "Order number/reference",
                                        "format": ""
                                      },
                                      "PrSt": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "description": "Project phase",
                                        "format": ""
                                      }
                                    },
                                    "required": [
                                      "Inst"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FiElectronicInvoicePurchase_POST": {
        "type": "object",
        "properties": {
          "FiElectronicInvoicePurchase": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "FXml": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "XML file name",
                        "format": ""
                      },
                      "XML": {
                        "type": "string",
                        "description": "Inhoud XML",
                        "format": "byte"
                      },
                      "FPdf": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "PDF file name",
                        "format": ""
                      },
                      "PDF": {
                        "type": "string",
                        "description": "Inhoud PDF",
                        "format": "byte"
                      },
                      "Proc": {
                        "type": "boolean",
                        "description": "Direct verwerken e-factuurregels",
                        "format": ""
                      },
                      "UnId": {
                        "type": "integer",
                        "description": "Administration",
                        "format": ""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FiEntriesCustom_PUT": {
        "type": "object",
        "properties": {
          "FiEntriesCustom": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "UnId": {
                        "type": "integer",
                        "description": "Administratie (verwijzing naar: Administratie =\u003E AfasKnUnit)",
                        "format": ""
                      },
                      "EnNo": {
                        "type": "integer",
                        "description": "Journal entry number",
                        "format": ""
                      },
                      "SeNo": {
                        "type": "integer",
                        "description": "Journal entry sequence number",
                        "format": ""
                      }
                    },
                    "required": [
                      "UnId",
                      "EnNo",
                      "SeNo"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "FiEntries_POST": {
        "type": "object",
        "properties": {
          "FiEntryPar": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "Year": {
                        "type": "integer",
                        "description": "Financial year",
                        "format": ""
                      },
                      "Peri": {
                        "type": "integer",
                        "description": "Period",
                        "format": ""
                      },
                      "UnId": {
                        "type": "integer",
                        "description": "Administration number",
                        "format": ""
                      },
                      "JoCo": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Journal",
                        "format": ""
                      },
                      "AdDc": {
                        "type": "boolean",
                        "description": "Maak verbijzonderingscode",
                        "format": ""
                      },
                      "AdDa": {
                        "type": "boolean",
                        "description": "Maak verbijzonderingstoewijzing",
                        "format": ""
                      },
                      "PrTp": {
                        "type": "integer",
                        "description": "Entry type",
                        "format": ""
                      },
                      "AuNu": {
                        "type": "boolean",
                        "description": "Autonummering factuur",
                        "format": ""
                      }
                    },
                    "required": [
                      "Year",
                      "Peri",
                      "JoCo"
                    ]
                  },
                  "Objects": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "FiEntries": {
                          "type": "object",
                          "properties": {
                            "Element": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Fields": {
                                    "type": "object",
                                    "properties": {
                                      "EnNo": {
                                        "type": "integer",
                                        "description": "Journal entry number",
                                        "format": ""
                                      },
                                      "VaAs": {
                                        "type": "string",
                                        "enum": [
                                          "1",
                                          "2",
                                          "3"
                                        ],
                                        "maxLength": 10,
                                        "description": "Account feature\n1 = Grootboekrekening;\n2 = Debiteur;\n3 = Crediteur;",
                                        "format": ""
                                      },
                                      "AcNr": {
                                        "type": "string",
                                        "maxLength": 16,
                                        "description": "Account number",
                                        "format": ""
                                      },
                                      "EnDa": {
                                        "type": "string",
                                        "description": "Date entry",
                                        "format": "date"
                                      },
                                      "BpDa": {
                                        "type": "string",
                                        "description": "Voucher date",
                                        "format": "date"
                                      },
                                      "BpNr": {
                                        "type": "string",
                                        "maxLength": 32,
                                        "description": "Entry number",
                                        "format": ""
                                      },
                                      "InId": {
                                        "type": "string",
                                        "maxLength": 12,
                                        "description": "Invoice number",
                                        "format": ""
                                      },
                                      "Ds": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "description": "Description entry",
                                        "format": ""
                                      },
                                      "AmDe": {
                                        "type": "number",
                                        "description": "Amount debit",
                                        "format": "number"
                                      },
                                      "AmCr": {
                                        "type": "number",
                                        "description": "Amount credit",
                                        "format": "number"
                                      },
                                      "VaId": {
                                        "type": "string",
                                        "maxLength": 3,
                                        "description": "VAT code",
                                        "format": ""
                                      },
                                      "CoVc": {
                                        "type": "string",
                                        "maxLength": 16,
                                        "description": "VAT reclaim",
                                        "format": ""
                                      },
                                      "CuId": {
                                        "type": "string",
                                        "maxLength": 3,
                                        "description": "Currency",
                                        "format": ""
                                      },
                                      "Rate": {
                                        "type": "number",
                                        "description": "Exchange rate",
                                        "format": "number"
                                      },
                                      "AmDc": {
                                        "type": "number",
                                        "description": "Debit currency amount",
                                        "format": "number"
                                      },
                                      "AmCc": {
                                        "type": "number",
                                        "description": "Credit currency amount",
                                        "format": "number"
                                      },
                                      "DaEx": {
                                        "type": "string",
                                        "description": "Expiry date",
                                        "format": "date"
                                      },
                                      "PaId": {
                                        "type": "string",
                                        "maxLength": 32,
                                        "description": "Payment reference",
                                        "format": ""
                                      },
                                      "Judg": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "description": "Reviewer",
                                        "format": ""
                                      },
                                      "BlPa": {
                                        "type": "boolean",
                                        "description": "Block for payment",
                                        "format": ""
                                      },
                                      "AmGa": {
                                        "type": "number",
                                        "description": "\u0027G\u0027-account amount",
                                        "format": "number"
                                      },
                                      "RsNo": {
                                        "type": "integer",
                                        "description": "Reservation number",
                                        "format": ""
                                      },
                                      "CmNo": {
                                        "type": "integer",
                                        "description": "Liability number",
                                        "format": ""
                                      },
                                      "PaCd": {
                                        "type": "string",
                                        "maxLength": 5,
                                        "description": "Payment condition",
                                        "format": ""
                                      },
                                      "AuPa": {
                                        "type": "boolean",
                                        "description": "Automatic payment/collection",
                                        "format": ""
                                      },
                                      "PaBa": {
                                        "type": "boolean",
                                        "description": "Refund",
                                        "format": ""
                                      },
                                      "IB47": {
                                        "type": "boolean",
                                        "description": "UBD - Amounts Paid to Third Parties",
                                        "format": ""
                                      },
                                      "CaId": {
                                        "type": "integer",
                                        "description": "Campaign",
                                        "format": ""
                                      },
                                      "OrNu": {
                                        "type": "string",
                                        "maxLength": 12,
                                        "description": "Sales order number",
                                        "format": ""
                                      },
                                      "Mref": {
                                        "type": "string",
                                        "maxLength": 32,
                                        "description": "Reconciliation reference",
                                        "format": ""
                                      },
                                      "Fref": {
                                        "type": "string",
                                        "maxLength": 32,
                                        "description": "Invoice reference",
                                        "format": ""
                                      },
                                      "PrId": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "description": "Project",
                                        "format": ""
                                      },
                                      "BankAccount": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "description": "Afwijkende betaalrekeningnr.",
                                        "format": ""
                                      },
                                      "IdBa": {
                                        "type": "integer",
                                        "description": "Deviating payment account",
                                        "format": ""
                                      },
                                      "DdId": {
                                        "type": "string",
                                        "maxLength": 35,
                                        "description": "Deviating mandate feature",
                                        "format": ""
                                      },
                                      "DaCl": {
                                        "type": "integer",
                                        "description": "Days credit restriction",
                                        "format": ""
                                      },
                                      "VaPa": {
                                        "type": "boolean",
                                        "description": "Payment discount incl. VAT",
                                        "format": ""
                                      },
                                      "DaDp": {
                                        "type": "integer",
                                        "description": "Days payment discount",
                                        "format": ""
                                      },
                                      "AmDp": {
                                        "type": "number",
                                        "description": "Payment discount",
                                        "format": "number"
                                      },
                                      "AcPa": {
                                        "type": "number",
                                        "description": "Payment discount in currency",
                                        "format": "number"
                                      },
                                      "DsId": {
                                        "type": "integer",
                                        "description": "Deviating reminder set",
                                        "format": ""
                                      }
                                    },
                                    "required": [
                                      "EnNo",
                                      "VaAs",
                                      "AcNr",
                                      "EnDa",
                                      "BpDa"
                                    ]
                                  },
                                  "Objects": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "FiDimEntries": {
                                          "type": "object",
                                          "properties": {
                                            "Element": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "Fields": {
                                                    "type": "object",
                                                    "properties": {
                                                      "DiC1": {
                                                        "type": "string",
                                                        "maxLength": 16,
                                                        "description": "Exception axis code 1",
                                                        "format": ""
                                                      },
                                                      "DiC2": {
                                                        "type": "string",
                                                        "maxLength": 16,
                                                        "description": "Exception axis code 2",
                                                        "format": ""
                                                      },
                                                      "DiC3": {
                                                        "type": "string",
                                                        "maxLength": 16,
                                                        "description": "Exception axis code 3",
                                                        "format": ""
                                                      },
                                                      "DiC4": {
                                                        "type": "string",
                                                        "maxLength": 16,
                                                        "description": "Exception axis code 4",
                                                        "format": ""
                                                      },
                                                      "DiC5": {
                                                        "type": "string",
                                                        "maxLength": 16,
                                                        "description": "Exception axis code 5",
                                                        "format": ""
                                                      },
                                                      "AmDe": {
                                                        "type": "number",
                                                        "description": "Amount debit",
                                                        "format": "number"
                                                      },
                                                      "AmCr": {
                                                        "type": "number",
                                                        "description": "Amount credit",
                                                        "format": "number"
                                                      },
                                                      "CuId": {
                                                        "type": "string",
                                                        "maxLength": 3,
                                                        "description": "Currency",
                                                        "format": ""
                                                      },
                                                      "AmDc": {
                                                        "type": "number",
                                                        "description": "Debit currency amount",
                                                        "format": "number"
                                                      },
                                                      "AmCc": {
                                                        "type": "number",
                                                        "description": "Credit currency amount",
                                                        "format": "number"
                                                      },
                                                      "Quan": {
                                                        "type": "number",
                                                        "description": "Number",
                                                        "format": "number"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "FiPrjEntries": {
                                          "type": "object",
                                          "properties": {
                                            "Element": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "Fields": {
                                                    "type": "object",
                                                    "properties": {
                                                      "PrId": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Project",
                                                        "format": ""
                                                      },
                                                      "PrSt": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Project phase",
                                                        "format": ""
                                                      },
                                                      "VaIt": {
                                                        "type": "string",
                                                        "enum": [
                                                          "1",
                                                          "10",
                                                          "11",
                                                          "14",
                                                          "2",
                                                          "3",
                                                          "4",
                                                          "5",
                                                          "6",
                                                          "7",
                                                          "8"
                                                        ],
                                                        "maxLength": 10,
                                                        "description": "Item type\n1 = Werksoort;\n10 = Productie-indicator;\n11 = Deeg;\n14 = Artikeldimensietotaal;\n2 = Artikel;\n3 = Tekst;\n4 = Subtotaal;\n5 = Toeslag;\n6 = Kosten;\n7 = Samenstelling;\n8 = Cursus;",
                                                        "format": ""
                                                      },
                                                      "ItCd": {
                                                        "type": "string",
                                                        "maxLength": 40,
                                                        "description": "Itemcode",
                                                        "format": ""
                                                      },
                                                      "Ds": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Description",
                                                        "format": ""
                                                      },
                                                      "AmCo": {
                                                        "type": "number",
                                                        "description": "Cost price",
                                                        "format": "number"
                                                      },
                                                      "Ch": {
                                                        "type": "boolean",
                                                        "description": "Charge",
                                                        "format": ""
                                                      },
                                                      "DcPr": {
                                                        "type": "number",
                                                        "description": "Allowance %",
                                                        "format": "number"
                                                      },
                                                      "AmSe": {
                                                        "type": "number",
                                                        "description": "Sales amount basic currency",
                                                        "format": "number"
                                                      },
                                                      "AmFc": {
                                                        "type": "number",
                                                        "description": "Sales amount",
                                                        "format": "number"
                                                      },
                                                      "CuId": {
                                                        "type": "string",
                                                        "maxLength": 3,
                                                        "description": "Currency",
                                                        "format": ""
                                                      },
                                                      "Rate": {
                                                        "type": "number",
                                                        "description": "Exchange rate",
                                                        "format": "number"
                                                      },
                                                      "Di01": {
                                                        "type": "integer",
                                                        "description": "(not used)",
                                                        "format": ""
                                                      },
                                                      "Di02": {
                                                        "type": "integer",
                                                        "description": "(not used)",
                                                        "format": ""
                                                      },
                                                      "Di03": {
                                                        "type": "integer",
                                                        "description": "(not used)",
                                                        "format": ""
                                                      },
                                                      "Di04": {
                                                        "type": "integer",
                                                        "description": "(not used)",
                                                        "format": ""
                                                      },
                                                      "Di05": {
                                                        "type": "integer",
                                                        "description": "(not used)",
                                                        "format": ""
                                                      },
                                                      "Qu": {
                                                        "type": "number",
                                                        "description": "Number",
                                                        "format": "number"
                                                      },
                                                      "OvPc": {
                                                        "type": "number",
                                                        "description": "Overheads (%)",
                                                        "format": "number"
                                                      },
                                                      "EmId": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Employee",
                                                        "format": ""
                                                      },
                                                      "MoId": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Monitoring code",
                                                        "format": ""
                                                      },
                                                      "CoTy": {
                                                        "type": "string",
                                                        "enum": [
                                                          "MA",
                                                          "A",
                                                          "ME",
                                                          "OA",
                                                          "O"
                                                        ],
                                                        "maxLength": 20,
                                                        "description": "Type of project costs\nMA = Materiaal;\nA = Arbeid;\nME = Materieel;\nOA = Onderaanneming;\nO = Overige kosten;",
                                                        "format": ""
                                                      }
                                                    },
                                                    "required": [
                                                      "PrId",
                                                      "ItCd"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "FiTransEntries": {
                                          "type": "object",
                                          "properties": {
                                            "Element": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "Fields": {
                                                    "type": "object",
                                                    "properties": {
                                                      "YeSt": {
                                                        "type": "integer",
                                                        "description": "Financial year from",
                                                        "format": ""
                                                      },
                                                      "PeSt": {
                                                        "type": "integer",
                                                        "description": "Period from",
                                                        "format": ""
                                                      },
                                                      "YeEn": {
                                                        "type": "integer",
                                                        "description": "Financial year up to incl.",
                                                        "format": ""
                                                      },
                                                      "PeEn": {
                                                        "type": "integer",
                                                        "description": "Period up to and incl",
                                                        "format": ""
                                                      },
                                                      "SuAc": {
                                                        "type": "string",
                                                        "maxLength": 16,
                                                        "description": "Suspense account",
                                                        "format": ""
                                                      },
                                                      "VaRo": {
                                                        "type": "string",
                                                        "enum": [
                                                          "N",
                                                          "G",
                                                          "T",
                                                          "H",
                                                          "D"
                                                        ],
                                                        "maxLength": 20,
                                                        "description": "Rounding\nN = Niet afronden;\nG = Afronden op gehele getallen;\nT = Afronden op tientallen;\nH = Afronden op honderdtallen;\nD = Afronden op duizendtallen;",
                                                        "format": ""
                                                      }
                                                    },
                                                    "required": [
                                                      "YeSt",
                                                      "PeSt",
                                                      "YeEn",
                                                      "PeEn"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FiInvoice_PUT": {
        "type": "object",
        "properties": {
          "FiInvoice": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "UnId": {
                        "type": "integer",
                        "description": "Administration",
                        "format": ""
                      },
                      "VaAd": {
                        "type": "string",
                        "enum": [
                          "2",
                          "3"
                        ],
                        "maxLength": 10,
                        "description": "Type of account\n2 = Debiteur;\n3 = Crediteur;",
                        "format": ""
                      },
                      "DcNr": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Sub-number",
                        "format": ""
                      },
                      "InId": {
                        "type": "string",
                        "maxLength": 12,
                        "description": "Invoice number",
                        "format": ""
                      },
                      "ExDa": {
                        "type": "string",
                        "description": "Expiry date",
                        "format": "date"
                      },
                      "Ds": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Invoice description",
                        "format": ""
                      },
                      "PaId": {
                        "type": "string",
                        "maxLength": 32,
                        "description": "Payment reference",
                        "format": ""
                      },
                      "BlPa": {
                        "type": "boolean",
                        "description": "Blocked for payment/collection",
                        "format": ""
                      },
                      "DuLe": {
                        "type": "boolean",
                        "description": "Remind",
                        "format": ""
                      },
                      "NrDu": {
                        "type": "integer",
                        "description": "Number of reminders",
                        "format": ""
                      },
                      "LdDa": {
                        "type": "string",
                        "description": "Last reminder date",
                        "format": "date"
                      },
                      "PaCd": {
                        "type": "string",
                        "maxLength": 5,
                        "description": "Payment condition",
                        "format": ""
                      },
                      "AuPa": {
                        "type": "boolean",
                        "description": "Automatic payment/collection",
                        "format": ""
                      },
                      "PaBa": {
                        "type": "boolean",
                        "description": "Refund",
                        "format": ""
                      },
                      "DdId": {
                        "type": "string",
                        "maxLength": 35,
                        "description": "Mandate feature",
                        "format": ""
                      },
                      "DaCl": {
                        "type": "integer",
                        "description": "Days credit restriction",
                        "format": ""
                      },
                      "AmCr": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "Credit restriction",
                        "format": "float"
                      },
                      "AcCr": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "Credit restriction (currency)",
                        "format": "float"
                      },
                      "VaPa": {
                        "type": "boolean",
                        "description": "Payment discount incl. VAT",
                        "format": ""
                      },
                      "DaDp": {
                        "type": "integer",
                        "description": "Days payment discount",
                        "format": ""
                      },
                      "AmPa": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "Payment discount",
                        "format": "float"
                      },
                      "AcPa": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "Payment discount (currency)",
                        "format": "float"
                      },
                      "Fref": {
                        "type": "string",
                        "maxLength": 32,
                        "description": "Invoice reference",
                        "format": ""
                      },
                      "DeDu": {
                        "type": "string",
                        "enum": [
                          "ALL",
                          "FOD",
                          "RSZ"
                        ],
                        "maxLength": 20,
                        "description": "Obligation to withhold\nALL = FOD Financi\u00EBn en Rijksdienst voor Sociale Zekerheid;\nFOD = FOD Financi\u00EBn;\nRSZ = Rijksdienst voor Sociale Zekerheid;",
                        "format": ""
                      },
                      "AmFO": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "FOD amount",
                        "format": "float"
                      },
                      "AmRS": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "RSZ amount",
                        "format": "float"
                      },
                      "PaRS": {
                        "type": "string",
                        "maxLength": 35,
                        "description": "RSZ payment reference",
                        "format": ""
                      },
                      "InAm": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "Interest amount",
                        "format": "float"
                      },
                      "InAc": {
                        "type": "number",
                        "multipleOf": 1E-10,
                        "description": "Interest amount (currency)",
                        "format": "float"
                      },
                      "BankAccount": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Afwijkende betaalrekeningnr.",
                        "format": ""
                      }
                    },
                    "required": [
                      "UnId",
                      "VaAd",
                      "DcNr"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "FiSepaDirectDebit_POST": {
        "type": "object",
        "properties": {
          "FiSepaDirectDebit": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "ViSe": {
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7",
                          "8"
                        ],
                        "maxLength": 10,
                        "description": "Organisatie vergelijken op\n0 = Organisatie-code;\n1 = KvK-nummer;\n2 = BTW-nummer;\n3 = IBAN-nummer;\n4 = Naam (debiteur);\n5 = Domicili\u00EBringsnummer;\n6 = Debiteurnummer;\n7 = Debiteurnummer \u002B IBAN-nummer;\n8 = Machtigings-Id;",
                        "format": ""
                      },
                      "Ds": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Vergelijken op",
                        "format": ""
                      },
                      "PaSh": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Kenmerk Machtiging vergelijken",
                        "format": ""
                      },
                      "VaDt": {
                        "type": "string",
                        "enum": [
                          "B",
                          "S"
                        ],
                        "maxLength": 20,
                        "description": "SEPA collection method\nB = B2B;\nS = Standaard;",
                        "format": ""
                      },
                      "PaId": {
                        "type": "string",
                        "maxLength": 35,
                        "description": "Mandate feature",
                        "format": ""
                      },
                      "AuDa": {
                        "type": "string",
                        "description": "Debit mandate date",
                        "format": "date"
                      },
                      "UnId": {
                        "type": "integer",
                        "description": "Administration",
                        "format": ""
                      },
                      "InId": {
                        "type": "string",
                        "maxLength": 12,
                        "description": "Invoice number",
                        "format": ""
                      },
                      "LdDa": {
                        "type": "string",
                        "description": "Date of last collection",
                        "format": "date"
                      },
                      "VaDc": {
                        "type": "string",
                        "enum": [
                          "AUTO",
                          "FNAL",
                          "FRST",
                          "OOFF",
                          "RCUR"
                        ],
                        "maxLength": 20,
                        "description": "Transaction delivery code\nAUTO = Automatisch aan de hand van incassohistorie;\nFNAL = Laatste opdracht in een reeks incassotransacties;\nFRST = Eerste opdracht in een reeks incassotransacties;\nOOFF = Eenmalige incassotransactie;\nRCUR = Vervolgopdracht in een reeks incassotransacties;",
                        "format": ""
                      },
                      "Iban": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "IBAN number",
                        "format": ""
                      },
                      "Conv": {
                        "type": "boolean",
                        "description": "Reused domestic (non-SEPA) mandate",
                        "format": ""
                      },
                      "VuDa": {
                        "type": "string",
                        "description": "Mandate expiry date",
                        "format": "date"
                      },
                      "CrOl": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Collector ID administration (old)",
                        "format": ""
                      },
                      "PaOl": {
                        "type": "string",
                        "maxLength": 35,
                        "description": "Mandate feature (old)",
                        "format": ""
                      },
                      "NmOl": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Administration name (old)",
                        "format": ""
                      },
                      "VaDs": {
                        "type": "string",
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7"
                        ],
                        "maxLength": 20,
                        "description": "Mandate status\n1 = Te ondertekenen;\n2 = Verstrekt;\n3 = Actief (getekend);\n4 = Voltooid (eenmalige machtiging);\n5 = Ingetrokken;\n6 = Vervallen;\n7 = Inactief;",
                        "format": ""
                      },
                      "PvDa": {
                        "type": "string",
                        "description": "Mandate issue date",
                        "format": "date"
                      }
                    },
                    "required": [
                      "ViSe",
                      "Ds",
                      "VaDt",
                      "AuDa",
                      "UnId",
                      "VaDc",
                      "VaDs"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "FiSepaDirectDebit_PUT": {
        "type": "object",
        "properties": {
          "FiSepaDirectDebit": {
            "type": "object",
            "properties": {
              "Element": {
                "type": "object",
                "properties": {
                  "Fields": {
                    "type": "object",
                    "properties": {
                      "ViSe": {
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7",
                          "8"
                        ],
                        "maxLength": 10,
                        "description": "Organisatie vergelijken op\n0 = Organisatie-code;\n1 = KvK-nummer;\n2 = BTW-nummer;\n3 = IBAN-nummer;\n4 = Naam (debiteur);\n5 = Domicili\u00EBringsnummer;\n6 = Debiteurnummer;\n7 = Debiteurnummer \u002B IBAN-nummer;\n8 = Machtigings-Id;",
                        "format": ""
                      },
                      "Ds": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Vergelijken op",
                        "format": ""
                      },
                      "PaSh": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Kenmerk Machtiging vergelijken",
                        "format": ""
                      },
                      "VaDt": {
                        "type": "string",
                        "enum": [
                          "B",
                          "S"
                        ],
                        "maxLength": 20,
                        "description": "SEPA collection method\nB = B2B;\nS = Standaard;",
                        "format": ""
                      },
                      "PaId": {
                        "type": "string",
                        "maxLength": 35,
                        "description": "Mandate feature",
                        "format": ""
                      },
                      "AuDa": {
                        "type": "string",
                        "description": "Debit mandate date",
                        "format": "date"
                      },
                      "UnId": {
                        "type": "integer",
                        "description": "Administration",
                        "format": ""
                      },
                      "InId": {
                        "type": "string",
                        "maxLength": 12,
                        "description": "Invoice number",
                        "format": ""
                      },
                      "LdDa": {
                        "type": "string",
                        "description": "Date of last collection",
                        "format": "date"
                      },
                      "VaDc": {
                        "type": "string",
                        "enum": [
                          "AUTO",
                          "FNAL",
                          "FRST",
                          "OOFF",
                          "RCUR"
                        ],
                        "maxLength": 20,
                        "description": "Transaction delivery code\nAUTO = Automatisch aan de hand van incassohistorie;\nFNAL = Laatste opdracht in een reeks incassotransacties;\nFRST = Eerste opdracht in een reeks incassotransacties;\nOOFF = Eenmalige incassotransactie;\nRCUR = Vervolgopdracht in een reeks incassotransacties;",
                        "format": ""
                      },
                      "Iban": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "IBAN number",
                        "format": ""
                      },
                      "Conv": {
                        "type": "boolean",
                        "description": "Reused domestic (non-SEPA) mandate",
                        "format": ""
                      },
                      "VuDa": {
                        "type": "string",
                        "description": "Mandate expiry date",
                        "format": "date"
                      },
                      "CrOl": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Collector ID administration (old)",
                        "format": ""
                      },
                      "PaOl": {
                        "type": "string",
                        "maxLength": 35,
                        "description": "Mandate feature (old)",
                        "format": ""
                      },
                      "NmOl": {
                        "type": "string",
                        "maxLength": 80,
                        "description": "Administration name (old)",
                        "format": ""
                      },
                      "VaDs": {
                        "type": "string",
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7"
                        ],
                        "maxLength": 20,
                        "description": "Mandate status\n1 = Te ondertekenen;\n2 = Verstrekt;\n3 = Actief (getekend);\n4 = Voltooid (eenmalige machtiging);\n5 = Ingetrokken;\n6 = Vervallen;\n7 = Inactief;",
                        "format": ""
                      },
                      "PvDa": {
                        "type": "string",
                        "description": "Mandate issue date",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "AfasToken": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "Convert the XML token to Base64 and add \u0027AfasToken \u0027 in front of it."
      }
    },
    "parameters": {
      "Accept-Language": {
        "name": "Accept-Language",
        "in": "header",
        "required": false,
        "description": "Indicates the client\u0027s preferred language for the response. If not provided, the API defaults to the base environment language.",
        "schema": {
          "type": "string",
          "enum": [
            "en-us",
            "nl-nl",
            "nl-be",
            "fr-fr",
            "de-de"
          ],
          "example": "en-us"
        }
      },
      "Content-Type": {
        "name": "Content-Type",
        "in": "header",
        "required": false,
        "description": "Specifies the media type and character encoding for the request body. Ensures proper decoding and interpretation of the transmitted data.",
        "schema": {
          "type": "string",
          "example": "application/json;charset=utf-8"
        }
      }
    },
    "responses": {
      "200": {
        "description": "OK; request is successfully executed.",
        "headers": {
          "Cache-Control": {
            "description": "no-store, no-cache",
            "schema": {
              "type": "string"
            }
          },
          "Content-Type": {
            "description": "application/xml; charset=utf-8",
            "schema": {
              "type": "string"
            }
          },
          "Strict-Transport-Security": {
            "description": "max-age=31536000",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Stats": {
            "description": "init(0ms), before response(0ms), complete(418ms)",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Version": {
            "description": "4.3.0.0",
            "schema": {
              "type": "string"
            }
          },
          "X-Content-Type-Options": {
            "description": "nosniff",
            "schema": {
              "type": "string"
            }
          },
          "X-Frame-Options": {
            "description": "deny",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Origin": {
            "description": "*",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Headers": {
            "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Methods": {
            "description": "GET, POST, PUT, DELETE, OPTIONS",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Max-Age": {
            "description": "1728000",
            "schema": {
              "type": "string"
            }
          },
          "Date": {
            "description": "Thu, 23 Nov 2023 12:11:06 GMT",
            "schema": {
              "type": "string"
            }
          },
          "Content-Length": {
            "description": "0",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "400": {
        "description": "Bad Request; invalid request"
      },
      "401": {
        "description": "Unauthorized; valid token but no access to this endpoint.",
        "headers": {
          "Cache-Control": {
            "description": "no-store, no-cache",
            "schema": {
              "type": "string"
            }
          },
          "Content-Type": {
            "description": "application/xml; charset=utf-8",
            "schema": {
              "type": "string"
            }
          },
          "Strict-Transport-Security": {
            "description": "max-age=31536000",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Stats": {
            "description": "init(0ms), before response(0ms), complete(418ms)",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Version": {
            "description": "4.3.0.0",
            "schema": {
              "type": "string"
            }
          },
          "X-Content-Type-Options": {
            "description": "nosniff",
            "schema": {
              "type": "string"
            }
          },
          "X-Frame-Options": {
            "description": "deny",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Origin": {
            "description": "*",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Headers": {
            "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Methods": {
            "description": "GET, POST, PUT, DELETE, OPTIONS",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Max-Age": {
            "description": "1728000",
            "schema": {
              "type": "string"
            }
          },
          "Date": {
            "description": "Thu, 23 Nov 2023 12:11:06 GMT",
            "schema": {
              "type": "string"
            }
          },
          "Content-Length": {
            "description": "0",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden; Due to IP restrictions in AFAS environment.",
        "headers": {
          "Cache-Control": {
            "description": "no-store, no-cache",
            "schema": {
              "type": "string"
            }
          },
          "Content-Type": {
            "description": "application/xml; charset=utf-8",
            "schema": {
              "type": "string"
            }
          },
          "Strict-Transport-Security": {
            "description": "max-age=31536000",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Stats": {
            "description": "init(0ms), before response(0ms), complete(418ms)",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Version": {
            "description": "4.3.0.0",
            "schema": {
              "type": "string"
            }
          },
          "X-Content-Type-Options": {
            "description": "nosniff",
            "schema": {
              "type": "string"
            }
          },
          "X-Frame-Options": {
            "description": "deny",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Origin": {
            "description": "*",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Headers": {
            "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Methods": {
            "description": "GET, POST, PUT, DELETE, OPTIONS",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Max-Age": {
            "description": "1728000",
            "schema": {
              "type": "string"
            }
          },
          "Date": {
            "description": "Thu, 23 Nov 2023 12:11:06 GMT",
            "schema": {
              "type": "string"
            }
          },
          "Content-Length": {
            "description": "0",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "404": {
        "description": "Not Found; requested resource is not available on the server.",
        "headers": {
          "Cache-Control": {
            "description": "no-store, no-cache",
            "schema": {
              "type": "string"
            }
          },
          "Content-Type": {
            "description": "application/xml; charset=utf-8",
            "schema": {
              "type": "string"
            }
          },
          "Strict-Transport-Security": {
            "description": "max-age=31536000",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Stats": {
            "description": "init(0ms), before response(0ms), complete(101ms)",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Version": {
            "description": "4.3.0.0",
            "schema": {
              "type": "string"
            }
          },
          "X-Content-Type-Options": {
            "description": "nosniff",
            "schema": {
              "type": "string"
            }
          },
          "X-Frame-Options": {
            "description": "deny",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Origin": {
            "description": "*",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Headers": {
            "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Methods": {
            "description": "GET, POST, PUT, DELETE, OPTIONS",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Max-Age": {
            "description": "1728000",
            "schema": {
              "type": "string"
            }
          },
          "Date": {
            "description": "Thu, 23 Nov 2023 12:11:06 GMT",
            "schema": {
              "type": "string"
            }
          },
          "Content-Length": {
            "description": "0",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "413": {
        "description": "Payload Too Large.",
        "headers": {
          "Cache-Control": {
            "description": "no-store, no-cache",
            "schema": {
              "type": "string"
            }
          },
          "Content-Type": {
            "description": "application/xml; charset=utf-8",
            "schema": {
              "type": "string"
            }
          },
          "Strict-Transport-Security": {
            "description": "max-age=31536000",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Stats": {
            "description": "init(0ms), before response(0ms), complete(418ms)",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Version": {
            "description": "4.3.0.0",
            "schema": {
              "type": "string"
            }
          },
          "X-Content-Type-Options": {
            "description": "nosniff",
            "schema": {
              "type": "string"
            }
          },
          "X-Frame-Options": {
            "description": "deny",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Origin": {
            "description": "*",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Headers": {
            "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Methods": {
            "description": "GET, POST, PUT, DELETE, OPTIONS",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Max-Age": {
            "description": "1728000",
            "schema": {
              "type": "string"
            }
          },
          "Date": {
            "description": "Thu, 23 Nov 2023 12:11:06 GMT",
            "schema": {
              "type": "string"
            }
          },
          "Content-Length": {
            "description": "0",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "headers": {
          "Cache-Control": {
            "description": "no-store, no-cache",
            "schema": {
              "type": "string"
            }
          },
          "Content-Type": {
            "description": "application/xml; charset=utf-8",
            "schema": {
              "type": "string"
            }
          },
          "Strict-Transport-Security": {
            "description": "max-age=31536000",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Stats": {
            "description": "init(0ms), before response(1ms), complete(2192ms)",
            "schema": {
              "type": "string"
            }
          },
          "X-AFAS-Proxy-Version": {
            "description": "4.3.0.0",
            "schema": {
              "type": "string"
            }
          },
          "X-Content-Type-Options": {
            "description": "nosniff",
            "schema": {
              "type": "string"
            }
          },
          "X-Frame-Options": {
            "description": "deny",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Origin": {
            "description": "*",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Headers": {
            "description": "Content-Type, Accept, Authorization, OnlineSessionId, Accept-Language",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Methods": {
            "description": "GET, POST, PUT, DELETE, OPTIONS",
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Max-Age": {
            "description": "1728000",
            "schema": {
              "type": "string"
            }
          },
          "Date": {
            "description": "Tue, 30 Jan 2024 20:30:07 GMT",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errorNumber": {
                  "type": "integer",
                  "example": {
                    "example": 0
                  }
                },
                "externalMessage": {
                  "type": "string",
                  "example": {
                    "example": "string"
                  }
                },
                "profitLogReference": {
                  "type": "string",
                  "example": {
                    "example": "string"
                  }
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "Service unavailable; retry at a later time. Contains the number of seconds to wait before retrying the request",
        "headers": {
          "Content-Type": {
            "description": "application/xml; charset=utf-8",
            "schema": {
              "type": "string"
            }
          },
          "Content-Length": {
            "description": "61",
            "schema": {
              "type": "string"
            }
          },
          "Retry-After": {
            "description": "7200",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": {
                        "example": "503"
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": {
                        "example": "Service temporarily unavailable due to scheduled maintenance. Please check afasstatus.nl for details."
                      }
                    }
                  }
                },
                "retry_after": {
                  "type": "integer",
                  "example": 7200
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "AfasToken": []
    }
  ]
}